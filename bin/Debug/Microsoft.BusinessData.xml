<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.BusinessData</name>
  </assembly>
  <members>
    <member name="T:Microsoft.BusinessData.Infrastructure.AccessDeniedException">
      <summary>Specifies the exception that is thrown when the Business Data Connectivity (BDC) service authorization subsystem detects an access attempt that is not valid.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String,System.Exception,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.FillState(Microsoft.BusinessData.Infrastructure.BdcExceptionState)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.FormatError(Microsoft.BusinessData.Infrastructure.IAccessControlList,System.Reflection.MemberInfo,System.String)">
      <summary>Returns a non-localized string that contains information for logging.</summary>
      <returns>A non-localized string that contains information for logging.</returns>
      <param name="acl">The permissions present on the object.</param>
      <param name="securableObjectType">The type of the object for which the request was denied.</param>
      <param name="securableObjectName">Name of the object for which the request was denied.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Retrieves the object data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedException.Message">
      <summary>Gets a generic access-denied error message.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedException.SecurableObjectType">
      <summary>Gets the type of the object to which access was denied.</summary>
      <returns>The <see cref="P:Microsoft.BusinessData.Infrastructure.AccessDeniedException.SecurableObjectType" /> object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedException.State">
      <summary>Gets the state of the Business Data Connectivity (BDC) service exception.</summary>
      <returns>The state of the Business Data Connectivity (BDC) service.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>A string representing the object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.AccessDeniedExceptionState">
      <summary>Represents the state of the <see cref="T:Microsoft.BusinessData.Infrastructure.AccessDeniedException" /> object. This state can be serialized and returned as faults from Web services.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedExceptionState.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedExceptionState.ReconstructException">
      <summary>Gets the exception represented by this state object..</summary>
      <returns>The Business Data Connectivity (BDC) service exception object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.AuthenticationScheme">
      <summary>Indicates the mode of authentication used when a component tries to access a resource on a remote computer.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.AuthenticationScheme.Unknown">
      <summary>Specifies that the proxy will authenticate access using Windows authentication (NTLM protocol).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.AuthenticationScheme.Forms">
      <summary>Specifies that the proxy expects a cookie provided by the client code.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.AuthenticationScheme.Ntlm">
      <summary>Specifies that the proxy will authenticate access using Windows authentication (NTLM protocol).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.AuthenticationScheme.RunAs">
      <summary>Specifies that the proxy expects the user name and password for the user who is connecting to Microsoft SharePoint 2010.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcException">
      <summary>An exception that is thrown when a problem occurs in Business Data Connectivity (BDC) service.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with an exception helper.</summary>
      <param name="exceptionHelper">The exception helper that assists with localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="exceptionHelper">The exception helper that assists with localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String,System.Exception,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="exceptionHelper">The exception helper that assists with localization.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.ExceptionHelper">
      <summary>Gets the exception helper that assists with localization.</summary>
      <returns>The exception helper.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.FillState(Microsoft.BusinessData.Infrastructure.BdcExceptionState)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.Provides the state of the exception.</summary>
      <param name="state">The  Business Data Connectivity (BDC) service exception state.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the exception object data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.HasExplicitMessage">
      <summary>Determines whether the exception has an explicit message that identifies the encountered problem instead of the generic message that corresponds to the type of the exception.</summary>
      <returns>true if it has an explicit message; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.IsRetriable">
      <summary>Determines whether it is safe to retry the operation that caused the exception.</summary>
      <returns>true if it is safe to retry the operation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.Message">
      <summary>Gets the exception message.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.ServerStackTrace">
      <summary>Gets a server stack trace.</summary>
      <returns>The server stack trace string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.State">
      <summary>Gets the state of the Business Data Connectivity (BDC) service exception.</summary>
      <returns>The state of the Business Data Connectivity (BDC) service exception.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.ToString"></member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcExceptionState">
      <summary>Represents the Business Data Connectivity (BDC) service exception state that users can access for marshalling their implementations. This state can be serialized and returned as a Web service fault.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcExceptionState.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcExceptionState.ReconstructException">
      <summary>Reconstructs the exception to be used by the client.</summary>
      <returns>The exception to be used by the client.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcRights">
      <summary>Represents the permissions a principal can have on a Business Data Connectivity (BDC) service application and its metadata objects.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.None">
      <summary>No permissions are specified.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.Execute">
      <summary>Specifies the permission for executing the operation represented by the metadata object. This permission is valid only for a MethodInstance.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.Edit">
      <summary>Specifies the permission for editing the metadata object. This permission includes editing the attributes of the metadata object as well as adding, removing, or changing properties and localized names.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.SetPermissions">
      <summary>Specifies the permission to set and change permissions on metadata objects.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.UseInBusinessDataInLists">
      <summary>Do not use. Reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.SelectableInClients">
      <summary>Specifies the permission for selecting the metadata object in a list of metadata objects. For example, external content types for which the user does not have SelectableInClients permission will not be displayed for this user when they are creating external lists. </summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState">
      <summary>Represents the Business Data Connectivity (BDC) service run-time exceptions that are thrown, including run-time exceptions for metadata. This state can be serialized and returned as a Web service fault.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState.GetState(Microsoft.BusinessData.Infrastructure.BdcException)">
      <summary>Converts a <see cref="T:Microsoft.BusinessData.Infrastructure.BdcException" /> object to a <see cref="T:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState" /> object that can be transmitted over a Windows Communication Foundation (WCF) connection.</summary>
      <param name="exception">The Business Data Connectivity (BDC) service exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState.Rethrow">
      <summary>Throws the exception represented by this object.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.HashCode">
      <summary>Provides a wrapper for a byte array that represents a hash value of a larger structure or data element. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.#ctor(System.Byte[])">
      <summary>Constructs the class so that the hash code object can be created with an array of bytes representing the hash value.</summary>
      <param name="hashCode">A byte array that represents the hash value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.#ctor(System.String)">
      <summary>Constructs the class to create the hash code object with a base64-encoded string that contains the bytes representing the hash value.</summary>
      <param name="base64EncodedHashCode">A string that represents the hash value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.Equals(System.Object)">
      <summary>Determines whether one hash value is equal to another.</summary>
      <returns>true if the two hash values are equal; otherwise, false.</returns>
      <param name="obj">The hash value to use for comparison.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.GetHashCode">
      <summary>Returns a hash code value.</summary>
      <returns>An integer that represents the hash code.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.op_Equality(Microsoft.BusinessData.Infrastructure.HashCode,Microsoft.BusinessData.Infrastructure.HashCode)">
      <summary>Overloads the equality operator (==) so that it can be used to test the equality between two hash code values.</summary>
      <returns>true if the hash values are equal; otherwise, false.</returns>
      <param name="left">The first hash code value.</param>
      <param name="right">The second hash code value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.op_Inequality(Microsoft.BusinessData.Infrastructure.HashCode,Microsoft.BusinessData.Infrastructure.HashCode)">
      <summary>Overloads the inequality operator (!=) so that it can be used to test the inequality between two hash code values.</summary>
      <returns>true if the values are not equal to each other; otherwise, false.</returns>
      <param name="left">The first hash code value.</param>
      <param name="right">The second hash code value.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.HashCode.Size">
      <summary>Gets the size of the byte array representation of the hash code.</summary>
      <returns>The size of the byte array.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.ToString">
      <summary>Converts the hash value to a base64-encoded string.</summary>
      <returns>The string that represents the hash value.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IAccessControlEntry">
      <summary>Represents an interface for an Access Control Entry (ACE). ACEs represent permissions for a particular user, and are bundled up in collections called Access Control Lists (ACLs) that are attached to securable metadata objects.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.IAccessControlEntry.DisplayName">
      <summary>Gets the display name of the user, group, site, or service account in the access control entry.</summary>
      <returns>A string that represents the display name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.IAccessControlEntry.IdentityName">
      <summary>Gets the programmatic name of the security principal.</summary>
      <returns>The programmatic name of the security principal.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.IAccessControlEntry.Rights">
      <summary>Gets the collection of permissions assigned with the security principal.</summary>
      <returns>The collection of permissions.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IAccessControlList">
      <summary>Defines methods to handle access control entries in the Business Data Connectivity (BDC) service.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.AccessCheck(Microsoft.BusinessData.Infrastructure.BdcRights)">
      <summary>Determines whether the current client context has the specified permissions in the BDC.</summary>
      <returns>true if the client context has all of the specified permissions; otherwise, false. </returns>
      <param name="rightsMask">The permissions for which to check access.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.Add(Microsoft.BusinessData.Infrastructure.IAccessControlEntry)">
      <summary>Appends an access control entry to the access control list (ACL).</summary>
      <param name="ace">The access control entry given to this ACL.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.Clear">
      <summary>Removes all access control entries from the access control list (ACL).</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.Clone">
      <summary>Creates a shallow copy of the current object.</summary>
      <returns>A copy of the access control list (ACL).</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IConnectionManager">
      <summary>Represents an interface for managing connections to an external data system.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.CloseConnection(System.Object)">
      <summary>Closes the connection to the external system.</summary>
      <param name="connection">The connection object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.FlushConnections">
      <summary>Attempts to flush all connections in any connection pool maintained for the related external system instance.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.GetConnection">
      <summary>Gets a connection to the external system instance this connection manager was initialized with.</summary>
      <returns>The connection object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.Initialize(Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Initializes the Connection Manager with the given external system instance.</summary>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IExceptionHelper">
      <summary>Defines methods that assist with localization.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IExceptionHelper.GetLocalizedMessage(Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags)">
      <summary>Returns the localized exception message.</summary>
      <returns>The localized exception message.</returns>
      <param name="tag">The standard exception message tag.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IExceptionHelper.LogEvent(System.String)">
      <summary>Logs the exception event.</summary>
      <param name="message">The localized exception message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IExceptionHelper.TraceMessage(System.String)">
      <summary>Traces the exception message.</summary>
      <param name="message">The localized exception message.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.ILobiAuthenticationProvider">
      <summary>Represents an interface to get the user's credentials.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ILobiAuthenticationProvider.GetAuthenticationScheme(System.String,System.String)">
      <summary>Gets the authentication scheme used to log on.</summary>
      <returns>Authentication scheme used to log on.</returns>
      <param name="server">The server name.</param>
      <param name="serverURL">The server URL.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ILobiAuthenticationProvider.GetCookie(System.String,System.String)">
      <summary>Gets the cookie used to authenticate for forms.</summary>
      <returns>A cookie.</returns>
      <param name="server">The server name.</param>
      <param name="serverURL">The server URL.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ILobiAuthenticationProvider.GetPassword(System.String,System.String)">
      <summary>Gets the password used to log on.</summary>
      <returns>The password.</returns>
      <param name="server">The server name.</param>
      <param name="serverURL">The server URL.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ILobiAuthenticationProvider.GetUserId(System.String,System.String)">
      <summary>Gets the user name used to log on.</summary>
      <returns>The user name.</returns>
      <param name="server">The server name.</param>
      <param name="serverURL">The server URL.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IRemoteExecutionService">
      <summary>Executes the specified MethodInstance object in the Business Data Catalog (BDC) metadata.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IRemoteExecutionService.ExecuteBdcMethod(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String[])">
      <summary>Executes the specified MethodInstance object in the Business Data Catalog (BDC) metadata.</summary>
      <returns>A stream that contains the results of the execution. The structure of the stream is dependent on the specific shim that executed the method.</returns>
      <param name="dataClassNamespace">The namespace of the data class that contains the MethodInstance object to execute.</param>
      <param name="dataClassName">The name of the data class that contains the MethodInstance object to execute.</param>
      <param name="dataClassVersion">The version of the data class that contains the MethodInstance object to execute.</param>
      <param name="lobSystemInstanceName">The name of the LobSystemInstance object to provide connection management for the MethodInstance object.</param>
      <param name="methodInstanceName">The name of the MethodInstance object to execute.</param>
      <param name="callerLcid">The locale ID of the caller. Use this value to send error messages in the language that corresponds to the specified locale ID.</param>
      <param name="serializedOverrideArgs">The arguments of the method in XML serialized form, based on the metadata.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.ITypeReflector">
      <summary>Represents an interface for instantiating, setting, and getting values from objects in abstract type systems.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Get(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object)">
      <summary>Gets a value from the specified parent object.</summary>
      <returns>The value.</returns>
      <param name="typeDescriptor">The TypeDescriptor that corresponds to the value to get from the parent object.</param>
      <param name="instanceRootTypeDescriptor">The TypeDescriptor that corresponds to the parent object.</param>
      <param name="instance">iThe parent object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Get(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object,System.Int32)">
      <summary>Gets the value at the specified index from the specified collection.</summary>
      <returns>The value.</returns>
      <param name="collectionTypeDescriptor">The TypeDescriptor that represents an element in the collection.</param>
      <param name="instanceRootTypeDescriptor">The TypeDescriptor that represents the collection.</param>
      <param name="instance">The collection to get the value from.</param>
      <param name="index">The index of the value in the collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.GetCollectionSize(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object)">
      <summary>Gets the number of items in the specified collection.</summary>
      <returns>The number of items in the collection.</returns>
      <param name="collectionTypeDescriptor">The TypeDescriptor  that represents the specified collection.</param>
      <param name="instance">The collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.GetDotNetType(Microsoft.BusinessData.MetadataModel.ITypeDescriptor)">
      <summary>Gets the .NET Framework type that corresponds to the specified TypeDescriptor.</summary>
      <returns>The corresponding .NET Framework type.</returns>
      <param name="typeDescriptor">The TypeDescriptor to get the .NET Framework type of.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor)">
      <summary>Instantiates an object that corresponds to the specifiedTypeDescriptor, without using defined default values.</summary>
      <returns>The instantiated object.</returns>
      <param name="typeDescriptor">The TypeDescriptor.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Instantiates an object that corresponds to the specified TypeDescriptor using default values defined for the specified MethodInstance.</summary>
      <returns>An instantiated object.</returns>
      <param name="typeDescriptor">The TypeDescriptor.</param>
      <param name="methodInstance">The MethodInstance for which the default value is defined..</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Int32)">
      <summary>Instantiates a collection that corresponds to the specified TypeDescriptor with specified capacity without using defined default values.</summary>
      <returns>The instantiated collection.</returns>
      <param name="collectionTypeDescriptor">The TypeDescriptor for the collection.</param>
      <param name="size">Initial capacity of the collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Int32,Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Instantiates a collection that corresponds to the specified TypeDescriptor using default values defined for the specified MethodInstance.</summary>
      <returns>The instantiated collection.</returns>
      <param name="collectionTypeDescriptor">The TypeDescriptor for the collection.</param>
      <param name="size">Initial capacity of the collection.</param>
      <param name="methodInstance">The MethodInstance for which the default value is defined.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.ResolveDotNetType(System.String,Microsoft.BusinessData.MetadataModel.ILobSystemStruct)">
      <summary>Gets the .NET Framework type that corresponds to the specified name of the type.</summary>
      <returns>The corresponding .NET Framework type.</returns>
      <param name="abstractTypeName">The name of the type as understood by this TypeReflector.</param>
      <param name="lobSystemStruct">The external system that contains the reference type name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Set(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object@,System.Object)">
      <summary>Sets the specified value in the specified parent object.</summary>
      <param name="typeDescriptor">The TypeDescriptor that corresponds to the specified value.</param>
      <param name="instanceRootTypeDescriptor">The TypeDescriptor that corresponds to the parent object.</param>
      <param name="instance">The parent object.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Set(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object@,System.Object,System.Int32)">
      <summary>Sets the specified value at the specified index of the specified collection.</summary>
      <param name="typeDescriptor">The TypeDescriptor that represents an element in the collection.</param>
      <param name="instanceRootTypeDescriptor">The TypeDescriptor that represents the collection.</param>
      <param name="instance">The collection.</param>
      <param name="value">The value to set.</param>
      <param name="index">The index in the collection to set.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Pair`2">
      <summary>Represents a container for a pair of reference type instances.</summary>
      <typeparam name="T1">A reference type.</typeparam>
      <typeparam name="T2">A reference type.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.#ctor(`0,`1)">
      <summary>Constructs a pair of values from the given values.</summary>
      <param name="t1">The first value.</param>
      <param name="t2">The second value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.Equals(System.Object)">
      <summary>Indicates whether the values and the types of values in this pair and the supplied pair are the same.</summary>
      <returns>true if the values and the types of values in this pair and the supplied pair are the same; otherwise, false.</returns>
      <param name="obj">The pair to compare to.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.First">
      <summary>Gets the first value in the pair.</summary>
      <returns>The first value in the pair.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.GetHashCode">
      <summary>Gets the hash code of the two reference type instances.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.IsEmpty">
      <summary>Returns a value that indicates whether either value of the pair is empty.</summary>
      <returns>true if either value of the pair is empty; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.IsNullOrEmpty">
      <summary>Returns a value that indicates whether either value of the pair is null or empty.</summary>
      <returns>true either value of the pair is null or empty; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.op_Equality(Microsoft.BusinessData.Infrastructure.Pair{`0,`1},Microsoft.BusinessData.Infrastructure.Pair{`0,`1})">
      <summary>Determines whether the values and the types of values in this pair and those in a supplied pair are the same.</summary>
      <returns>true if the values and the types of values in this pair and the supplied pair are the same; otherwise, false.</returns>
      <param name="p1">The first pair to compare.</param>
      <param name="p2">The second pair to compare.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.op_Inequality(Microsoft.BusinessData.Infrastructure.Pair{`0,`1},Microsoft.BusinessData.Infrastructure.Pair{`0,`1})">
      <summary>Determines whether the values and the types of values in this pair and those in a supplied pair are not the same.</summary>
      <returns>true if the values and the types of values in this pair and the supplied pair are not the same; otherwise, false.</returns>
      <param name="p1">The first pair to compare.</param>
      <param name="p2">The second pair to compare.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.Second">
      <summary>Gets the second value in the pair.</summary>
      <returns>The second value in the pair.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.ToString">
      <summary>Provides a string representation of the two values in the pair. </summary>
      <returns>The string representation of the pair.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.ToString(System.String)">
      <summary>Replaces the {0} and {1} tokens in the supplied format string with the string values of the first and second values in the pair.</summary>
      <returns>The string representation of the pair.</returns>
      <param name="format">The supplied format.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags">
      <summary>Represents an enumeration that stores a list of tags that correspond to the known Business Data Connectivity (BDC) service exception types.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.BdcException">
      <summary>Specifies a generic error message with no additional information.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.GenericMetadataObjectException">
      <summary>Specifies an error message parameterized by base message or a metadata object TypeName.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.InvalidMetadataObjectException">
      <summary>Specifies an error message parameterized by a metadata object TypeName, a metadata object Name, a metadata object ID, or an field name that is not valid.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.DuplicateMetadataObjectException">
      <summary>Specifies an error message parameterized by a metadata object TypeName, a metadata object Name, a metadata object ID, or a duplicate field name.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.ExceededMetadataObjectLimitException">
      <summary>Specifies an error message parameterized by a metadata object TypeName.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.InvalidMetadataObjectPropertyException">
      <summary>Specifies an error message parameterized by a metadata object Name, a metadata object TypeName, or an property name that is not valid.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.MetadataObjectNotFoundException">
      <summary>Specifies an error message parameterized by a metadata object TypeName or search criteria.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.AccessDeniedException">
      <summary>Specifies an error message with no parameters.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.UnknownLiteral">
      <summary>Specifies an error message caused by an unknown literal.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.MetadataObjectLiteral">
      <summary>Specifies an error message caused by a metadata object literal.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Util">
      <summary>Contains utility functions that are used by the Business Data Connectivity service.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.EscapeDotNotationPath(System.String)">
      <summary>Escapes the specified string to be used in a dotted path.</summary>
      <returns>The escaped string.</returns>
      <param name="unescaped">The string to escape.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.GetReflectedValue(System.Reflection.MemberInfo,System.Object,Microsoft.BusinessData.MetadataModel.ITypeDescriptor)">
      <summary>Returns the value of a field or a property from the given object by using reflection.</summary>
      <returns>The value of the specified field or property from the given object.</returns>
      <param name="fieldOrProperty">The field or property from which to obtain the value.</param>
      <param name="instance">The object that contains the value.</param>
      <param name="parentTypeForFieldOrProperty">A type descriptor that represents the instance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.ProbeType(System.Type,System.String,System.Reflection.BindingFlags)">
      <summary>Returns the member information from a type for a field or a property by using reflection.</summary>
      <returns>The member information for the specified type of the specified field or property.</returns>
      <param name="type">The type that contains the member.</param>
      <param name="fieldOrPropertyName">The name of the field or property.</param>
      <param name="bindingFlags">The binding flags to use for searching the member.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.SetReflectedValue(System.Reflection.MemberInfo,System.Object,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object)">
      <summary>Sets the value of a field or a property on the given object by using reflection.</summary>
      <param name="fieldOrProperty">The field or property on which to set the value.</param>
      <param name="instance">The object on which to set the value.</param>
      <param name="parentTypeForFieldOrProperty">The type descriptor that represents the instance object.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.Split(System.Char,System.String)">
      <summary>Returns a list that contains the substrings, in a specific string, that are delimited by the specified character.</summary>
      <returns>A list of substrings delimited by the specified character.</returns>
      <param name="delimiter">The character that specifies the delimiter to use to split the string into substrings.</param>
      <param name="str">The string to split.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1">
      <summary>Defines properties and methods that handle read-only collections.</summary>
      <typeparam name="T">The type parameter of the items in the collection.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.Contains(`0)">
      <summary>Determines whether the collection contains a specific item.</summary>
      <returns>true if the item is found in the collection; otherwise, false.</returns>
      <param name="item">The item to search for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the items of the collection to an array starting at a specified index.</summary>
      <param name="array">The array name.</param>
      <param name="arrayIndex">The index to start at.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>An integer that represents the number of items in the collection.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.Item(System.Int32)">
      <summary>Gets the item at a specified index.</summary>
      <param name="index">The index of the item to be returned.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2">
      <summary>Defines methods and properties that handle read-only dictionary collections.</summary>
      <typeparam name="TKey">The key of the dictionary entry.</typeparam>
      <typeparam name="TValue">The value at the dictionary entry.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>Determines whether the dictionary contains a specific key.</summary>
      <returns>true if the key is found; otherwise, false.</returns>
      <param name="key">The specified key to search for.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.Item(`0)">
      <summary>Gets the item that exists at a specified key.</summary>
      <param name="key">The specified key.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.Keys">
      <summary>Gets the collection of keys in the dictionary.</summary>
      <returns>The collection of keys in the dictionary.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>Determines whether a specified value is stored at a specified key in the dictionary.</summary>
      <returns>true if the value is found; otherwise, false.</returns>
      <param name="key">The specified key.</param>
      <param name="value">The value to search for at the specified key.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.Values">
      <summary>Gets the collection of values in the dictionary.</summary>
      <returns>The collection of values in the dictionary.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyNamedDictionary`1">
      <summary>Represents a special implementation of IReadOnlyDictionary, where the key is a string.</summary>
      <typeparam name="TValue">The value parameter.</typeparam>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ICredentialEntry">
      <summary>Provides information about entering credentials for the Secure Store.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ICredentialEntry.GetCredentialManagementUrl(System.String)">
      <summary>Gets the URL where a caller can set credentials for a target application.</summary>
      <returns>The URL for credential management.</returns>
      <param name="appId">The target application identifier.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential">
      <summary>Defines two properties to retrieve the credential type and credential value.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential.Credential">
      <summary>Retrieves the credential values.</summary>
      <returns>A secure string that contains the credential value.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential.CredentialType">
      <summary>Retrieves the credential type.</summary>
      <returns>A type that indicates the credential type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider">
      <summary>Represents a Secure Store provider that can be implemented to replace the default Secure Store provider.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.DeleteCredentials(System.String)">
      <summary>Deletes the credentials of the caller for a target applicaiton.</summary>
      <param name="appId">Target application identifier.</param>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException">The credentials are not available for the specified target application.</exception>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException">The target application does not exist in the Secure Store.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.GetCredentials(System.String)">
      <summary>Returns the Secure Store credentials for the specified target application identifier. </summary>
      <returns>The collection of credentials.</returns>
      <param name="appId">The target application identifier.</param>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException">The credentials are not available for the specified target application.</exception>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException">The target application does not exist in the Secure Store.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.GetCredentialsUsingTicket(System.String,System.String)">
      <summary>Gets the credentials for the target application using the specified previously issued Secure Store ticket and target application ID.</summary>
      <returns>The collection of credentials.</returns>
      <param name="ticket">A Secure Store ticket that is previously issued through a call to <see cref="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.IssueTicket" />.</param>
      <param name="appId">The target application identifier.</param>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException">The credentials are not available for the specified target application.</exception>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException">The target application does not exist in the Secure Store.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.GetRestrictedCredentials(System.String)">
      <summary>Returns the Secure Store credentials for the specified target application identifier. </summary>
      <returns>The collection of credentials.</returns>
      <param name="appId">The target application identifier.</param>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException">The credentials are not available for the specified target application.</exception>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException">The target application does not exist in the Secure Store.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.IssueTicket">
      <summary>Returns a ticket that can be used later to retrieve credentials.</summary>
      <returns>A ticket string (base64 encoded).</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.ProviderInformation">
      <summary>Provides information about the Secure Store provider.</summary>
      <returns>The information about the Secure Store provider.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended">
      <summary>Extends the <see cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider" /> interface by adding the target application information.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended.GetTargetApplication(System.String)">
      <summary>Gets a single target application definition.</summary>
      <returns>The metadata (information) about the specified target application. </returns>
      <param name="appId">The target application identifier.</param>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException">The target application does not exist in the Secure Store.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended.GetTargetApplicationFields(System.String)">
      <summary>Gets the credential fields for the specified target application.</summary>
      <returns>The collection of target application fields.</returns>
      <param name="appId">The target application identifier.</param>
      <exception cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException">The target application does not exist in the Secure Store.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended.GetTargetApplications">
      <summary>Gets a list of target applications that the caller has access to.</summary>
      <returns>A list of target applications that the caller has access to.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation">
      <summary>Defines properties that retrieve information on the Secure Store provider.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation.AssemblyName">
      <summary>Gets the assembly name of the provider.</summary>
      <returns>The assembly name of the provider.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation.Vendor">
      <summary>Gets the vendor name.</summary>
      <returns>The vendor name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation.Version">
      <summary>Gets the version information.</summary>
      <returns>The version information.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition">
      <summary>Defines properties that retrieve information on the target application.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.ContactEmail">
      <summary>Retrieves the e-mail address for the contact.</summary>
      <returns>The e-mail address for the contact.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.CredentialManagementUrl">
      <summary>Retrieves the Uniform Resource Indicator (URI) for managing the credentials.</summary>
      <returns>The URI for managing the credentials.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.FriendlyName">
      <summary>Retrieves the friendly name of the target application.</summary>
      <returns>The target application friendly name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.Name">
      <summary>Retrieves the target application name.</summary>
      <returns>The target application name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.Type">
      <summary>Retrieves the type of the target application.</summary>
      <returns>The target application type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField">
      <summary>Defines properties that retrieve information on the target application field.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField.CredentialType">
      <summary>Gets the credential type for this field.</summary>
      <returns>The field credential type.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField.IsMasked">
      <summary>Gets a value indicating whether the field should be masked in the user interface.</summary>
      <returns>true to mask the field; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField.Name">
      <summary>Gets the name of the field, such as User Name or Password.</summary>
      <returns>The name of the field.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialCollection">
      <summary>Represents a read-only collection class for a Secure Store credential.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialCollection.#ctor(System.Collections.Generic.IList{Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential})">
      <summary>Constructs and initializes the class by using a list of parameters.</summary>
      <param name="creds">The list of credential items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialCollection.Dispose">
      <summary>Disposes the instance of the Secure Store credential collection.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException">
      <summary>Represents an exception that is thrown from the Secure Store when the credentials are not available for a given target application.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and an inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="innerException">The inner exception object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.String,System.String,System.Uri)">
      <summary>Constructs a new instance of the class with a message and application information.</summary>
      <param name="message">The message text.</param>
      <param name="targetAppId">The target application identifier.</param>
      <param name="url">The credential management URL.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.CredentialManagementUrl">
      <summary>Gets the credential management URL if the target application type is an individual application.</summary>
      <returns>The credential management URL for an individual target application or null for a group application.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Writes information about the exception to the specified serialization information.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.TargetApplicationId">
      <summary>Gets the target application identifier for which the credentials are not available.</summary>
      <returns>The target application identifier.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType">
      <summary>Represents the enumeration that contains the credential types.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.UserName">
      <summary>Specifies a user name credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Password">
      <summary>Specifies a password credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Pin">
      <summary>Specifies a PIN credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Key">
      <summary>Specifies a key credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Generic">
      <summary>Specifies a generic credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.WindowsUserName">
      <summary>Specifies the Windows user name credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.WindowsPassword">
      <summary>Specifies the Windows password credential.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException">
      <summary>Represents an exception class that is thrown from a Secure Store object.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and an inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="innerException">The inner exception object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the Serializationinfo object with information about the exception.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException">
      <summary>Represents an exception that is thrown from the Secure Store when the specified target application does not exist in the Secure Store.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the class with a specified error message and the identifier (ID) of the target application.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="targetAppId">The target application identifier.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains textual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.TargetApplicationId">
      <summary>Gets the target application identifier (ID).</summary>
      <returns>The target application ID.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType">
      <summary>Represents the enumeration of the target application types supported by the Secure Store.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.Individual">
      <summary>Specifies the individual application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.Group">
      <summary>Specifies the group application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.IndividualWithTicketing">
      <summary>Specifies the individual application with ticketing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.GroupWithTicketing">
      <summary>Specifies the group application with ticketing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.RestrictedIndividual">
      <summary>Specifies a restricted individual application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.RestrictedGroup">
      <summary>Specifies a restricted group application.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag">
      <summary>Represents the enumeration of the bitmask flags for the <see cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType" /> class.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.IndividualFlag">
      <summary>Specifies the bitmask for individual application (= 0).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.GroupFlag">
      <summary>Specifies the bitmask for group application (=1).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.EnableTicketFlag">
      <summary>Specifies the bitmask for enabling tickets for the application (=2).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.RestrictedFlag">
      <summary>Specifies the bitmask for marking an application as a restricted application (=4).</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController">
      <summary>Represents the interface implemented by the LoadController class that contains the throttling rules for scopes. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.ContainsThrottleRule(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Determines whether a throttling rule exists for the given ThrottleType object and ThrottleScope object.</summary>
      <returns>true if a throttling rule exists for the given ThrottleType and ThrottleScope; otherwise, false.</returns>
      <param name="throttleScope">The throttle scope for which the throttling rule default value must be returned.</param>
      <param name="throttleType">The throttle type for which the throttling rule default value must be returned.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.GetThrottleRuleDefault(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Returns the default value for the given ThrottleScope object and ThrottleType object.</summary>
      <returns>The default value.</returns>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.GetThrottleRuleMax(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Returns the maximum value for the given ThrottleScope object and ThrottleType object.</summary>
      <returns>The maximum value.</returns>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.IsThrottleRuleEnabled(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Determines whether the throttle rule is enabled for a given ThrottleScope object and ThrottleType object .</summary>
      <returns>true if the rule is enabled; otherwise, false</returns>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.OverrideThrottleRuleDefault(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType,System.Int32)">
      <summary>Overrides the default value set by the administrator for the ThrottleType.</summary>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
      <param name="defaultValue">The default value.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.DirectionType">
      <summary>Represents a direction parameter for methods on external system objects.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.In">
      <summary>Specifies an input-only parameter.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.Out">
      <summary>Specifies an output-only parameter.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.InOut">
      <summary>Specifies an input and output parameter.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.Return">
      <summary>Specifies a parameter representing the return value from the final .NET Framework method invocation on the external system object.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException">
      <summary>Represents an exception that is thrown when one or more metadata objects have field values that are equal in a context where this is not allowed.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class, which contains a reference to the metadata object that is causing the problem because it is a duplicate.</summary>
      <param name="duplicateMetadataObject">The duplicate metadata object.</param>
      <param name="duplicateFieldName">The field name on the metadata object that contains the duplicate value.</param>
      <param name="exh">The exception helper that assists in localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data. </summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains textual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message string that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, the duplicate metadata object instance, and the name of the field that contains the duplicate.</summary>
      <param name="message">The message string that describes the error.</param>
      <param name="duplicateMetadataObject">The duplicate metadata object.</param>
      <param name="duplicateFieldName">The field name on the metadata object that contains the duplicate value.</param>
      <param name="exh">The exception helper that assists in localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message string that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String,System.Exception,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, the duplicate metadata object instance, and the name of the field that contains the duplicate.</summary>
      <param name="message">The message string that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
      <param name="duplicateMetadataObject">The duplicate metadata object.</param>
      <param name="duplicateFieldName">The field name on the metadata object that contains the duplicate value.</param>
      <param name="exh">The exception helper that assists in localization of the error message.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.Message">
      <summary>Retrieves the message of the exception.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.ToString">
      <summary>Creates and returns a string representation of the current exception.</summary>
      <returns>A string that represents the current exception.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException">
      <summary>Represents the exception that is thrown when the number of metadata objects of a particular type that are loaded into the cache exceeds a predefined limit, or if the number of metadata objects related to another metadata object exceeds a predefined limit.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data. </summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains textual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String,System.Exception,System.Type,System.Int32,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, the metadata object .NET Framework Type, and the numerical limit that was exceeded.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
      <param name="metadataObjectType">The type of metadata object involved in the limit violation.</param>
      <param name="limit">The numerical value of the limit.</param>
      <param name="exh">The exception helper that assists in the localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String,System.Type,System.Int32,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, the metadata object .NET Framework Type, and the numerical limit that was exceeded.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="metadataObjectType">The type of metadata object involved in the limit violation.</param>
      <param name="limit">The numerical value of the limit.</param>
      <param name="exh">The exception helper that helps localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.Type,System.Int32,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with the metadata object .NET Framework Type and the numerical limit that was exceeded.</summary>
      <param name="metadataObjectType">The type of metadata object involved in the limit violation.</param>
      <param name="limit">The numerical value of the limit.</param>
      <param name="exh">The exception helper that assists in the localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains textual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.Limit">
      <summary>Gets or sets the numerical limit that was exceeded.</summary>
      <returns>The numerical value of the limit.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.Message">
      <summary>Gets the exception message.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.ToString">
      <summary>Creates and returns a string representation of the current exception object.</summary>
      <returns>The string representation of the current exception object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.FilterType">
      <summary>Represents the enumeration that identifies the type of the filter descriptor.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Comparison">
      <summary>The external system uses the value of this filter to limit the returned items to the result of a comparison (=1).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.LastId">
      <summary>The value of the filter that will be used to identify the last item obtained by the caller in an enumeration (=3).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Limit">
      <summary>The external system uses the value of this filter to limit the returned items (=4).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.PageNumber">
      <summary>The value of the filter that will be used to specify the number of the page that is requested (=5).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Password">
      <summary>The value of the filter that will be used to pass SSO password (=6).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.SsoTicket">
      <summary>The value of the filter that will be used to pass SSO ticket (=8).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Timestamp">
      <summary>The value of the filter that will be used to send time information (=9).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.UserContext">
      <summary>The value of the filter that will be used to pass identity of the current user (=10).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Username">
      <summary>The value of the filter that will be used to send a single sign-on (SSO) username (=11).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.UserProfile">
      <summary>The value of the filter that will be used to send a Property from the user's profile.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Wildcard">
      <summary>The external system uses the value of this filter to limit the returned items to the result of a comparison based on a wildcarded string (=13).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Input">
      <summary>The value of the filter that will be sent to external system. The semantics in which the value will be used by the external system are unknown (=14).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Output">
      <summary>The value of this filter that will represent a result returned by the external system after execution. The semantics of this value are unknown (=15).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.InputOutput">
      <summary>The value of this filter is sent to external system and the value will represent a result returned by the external system after execution. The semantics of this value are unknown (=16).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Batching">
      <summary>The value of the filter that will be used to set and get anchor values when the external system supports batching (=17).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.BatchingTermination">
      <summary>The value of the filter that will be used to identify when there is no more data in a batching function (=18).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.UserCulture">
      <summary>The value of the filter that will be used to send callers locale to the external system (=19).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.ActivityId">
      <summary>The value of the filter that will be used to send a unique identifier for the operation to the external system.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAccessControlledMetadataObject">
      <summary>Represents a metadata object to which access can be restricted.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAccessControlledMetadataObject.GetAccessControlList">
      <summary>Retrieves the access control list (ACL) for this object.</summary>
      <returns>The ACL object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAction">
      <summary>Defines methods and properties on an action.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.DoesWorkWith(Microsoft.BusinessData.MetadataModel.IView)">
      <summary>Gets a value that indicates if this action is supported against an EntityInstance that has the given view.</summary>
      <returns>true if the action can work against the given view; otherwise, false.</returns>
      <param name="view">The view to check against.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.GetActionParameters">
      <summary>Gets the parameters of this action.</summary>
      <returns>The collection of action parameters.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.GetDataClass">
      <summary>Gets the external content type of this action.</summary>
      <returns>The external content type of this action.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.GetParameterizedUrl(Microsoft.BusinessData.Runtime.IInstance)">
      <summary>Gets the fully parameterized URL whose parameters are filled out by the values of the supplied identifiers using the specified instance.</summary>
      <returns>The fully parameterized URL.</returns>
      <param name="instance">Instance to use to get the values for the action parameters. Not required if this action does not have any parameters.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.ImageUrl">
      <summary>Gets a URL to the image that represents the action.</summary>
      <returns>A string representing the image associated with the action.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.IsOpenedInNewWindow">
      <summary>Gets a Boolean value that indicates if a new window is opened for the action.</summary>
      <returns>true if a new window is opened; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.Position">
      <summary>Gets the position of the action.</summary>
      <returns>The number that represents the position of the action.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.Url">
      <summary>Gets the URL to go to when the action is clicked.</summary>
      <returns>The URL string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IActionParameter">
      <summary>Defines the parameters that the action URL accepts.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IActionParameter.GetAction">
      <summary>Gets the action object that is associated with the <see cref="T:Microsoft.BusinessData.MetadataModel.IActionParameter" /> object.</summary>
      <returns>An action object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IActionParameter.Index">
      <summary>Gets the index of the parameter.</summary>
      <returns>A number that represents the index.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAssociation">
      <summary>Represents a relationship between two or more related external content types within external systems.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.AssociationGroup">
      <summary>Gets the association group for this association.</summary>
      <returns>The association group or null if the association does not have an AssociationGroup.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.DestinationReference">
      <summary>Gets a reference to the destination external content type.</summary>
      <returns>A reference to the destination external content type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociation.GetDestination">
      <summary>Gets the destination external content type of the association.</summary>
      <returns>
        <see cref="T:Microsoft.BusinessData.MetadataModel.IEntity" />. The destination external content type.</returns>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The destination external content type is not available.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociation.GetSources">
      <summary>Gets the source external content types in an association.</summary>
      <returns>
        <see cref="T:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary" />. An external content type collection object.</returns>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The source external content type is not available.</exception>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.IsBound">
      <summary>Gets whether this association has all external content type references available.</summary>
      <returns>true if the association has all external content type references available; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.SourceReferences">
      <summary>Gets the collection of references to source external content types.</summary>
      <returns>The collection of references to source external content types.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAssociationGroup">
      <summary>Represents a relationship between external content types by grouping related association objects.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationGroup.DestinationReference">
      <summary>Returns a reference to the destination external content type.</summary>
      <returns>A reference to the destination external content type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetAssociator">
      <summary>Returns the Associator contained in this association group, which is an object that implements the IAssociation interface.</summary>
      <returns>The Associator contained in this association group or null if no Associator exists  in this association group.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetBulkAssociatedIdEnumerator(Microsoft.BusinessData.MetadataModel.IEntity)">
      <summary>Returns the BulkAssociatedIdEnumerator of this association group that corresponds to the specified source external content type.</summary>
      <returns>The BulkAssociatedIdEnumerator of this association group that corresponds to the specified source external content type.</returns>
      <param name="source">The source external content type.</param>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The association group doesn't contain a BulkAssociatedIdEnumerator for the specified source external content type.</exception>
      <exception cref="T:System.ArgumentException">The specified external content type is not a source of this  association group.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetBulkNavigators">
      <summary>Returns the BulkAssociationNavigators of this association group.</summary>
      <returns>The BulkAssociationNavigators of this association group.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetDestination">
      <summary>Returns the destination external content type of the association.</summary>
      <returns>The destination external content type of the association.</returns>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The external content type is not present.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetDisassociator">
      <summary>Returns the Disassociator of this association group, which is an object that implements the IAssociation interface.</summary>
      <returns>The Disassociator of this association group or null if this association group does not have a Disassociator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetNavigators">
      <summary>Returns the AssociationNavigators of this association group.</summary>
      <returns>The AssociationNavigators of this association group.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetReverseBulkAssociatedIdEnumerator">
      <summary>Returns the BulkAssociatedIdEnumerator of this association group that corresponds to the destination external content type. </summary>
      <returns>The BulkAssociatedIdEnumerator of this association group that corresponds to the destination external content type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetReverseBulkNavigators">
      <summary>Returns the BulkAssociationNavigators of this association group that are in opposite direction to the association group.</summary>
      <returns>The BulkAssociationNavigators of this association group that are in opposite direction to the association group.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetReverseNavigators">
      <summary>Returns the AssociationNavigators of this association group that are in opposite direction to the association group.</summary>
      <returns>The AssociationNavigators of this association group that are in opposite direction to the association group.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetSources">
      <summary>The collection of source external content types.</summary>
      <returns>The collection of source external content types. If any of the source external content types is not present, this function will throw MetadataObjectNotFoundException.</returns>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The external content type is not present.</exception>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationGroup.IsBound">
      <summary>Returns a value that indicates whether all the source external content types and the destination external content type are available or not.</summary>
      <returns>true if all the source external content types and the destination external content type are available or not; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.IsReverse(Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Determines whether the given association is a reverse association.</summary>
      <returns>true if the association is in the group and is reverse; otherwise, false.</returns>
      <param name="association">The Association object that implements the IAssociation interface.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationGroup.SourceReferences">
      <summary>Returns a collection of source external content type references.</summary>
      <returns>A collection of source external content type references.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAssociationReference">
      <summary>Represents a reference to an association.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationReference.Entity">
      <summary>Gets a reference to the external content type that contains the association.</summary>
      <returns>A reference to the external content type that contains the association.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationReference.Name">
      <summary>Gets the name of the association.</summary>
      <returns>The name of the association.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IDataClass">
      <summary>Defines properties and methods that support a data class that represents the base class of all external content types.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IDataClass.Catalog">
      <summary>Gets the metadata catalog that contains this data class.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.MetadataModel.IMetadataCatalog" />.The metadata catalog that contains this data class.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.ContainsDefaultAction">
      <summary>Returns a value that indicates whether the DataClass has a default action.</summary>
      <returns>true if the class has a default action; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Executes the given method instance against a given external system instance.</summary>
      <returns>The return value of the method instance.</returns>
      <param name="methodInstanceToExecute">The method instance to execute.</param>
      <param name="lobSystemInstance">The external system instance to execute the method instance against.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Object[]@)">
      <summary>Executes the given method instance against a given external system instance with the given parameters.</summary>
      <returns>The return value of the method instance.</returns>
      <param name="methodInstanceToExecute">The method instance to execute.</param>
      <param name="lobSystemInstance">The external system instance to execute the method instance against.</param>
      <param name="overrideArgs">The arguments to pass to the external system. The <paramref name="overrideArgs" /> array must have as many elements as there are parameters in the BDC model for that method, including the return parameter.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetActions">
      <summary>Returns available actions associated with this DataClass.</summary>
      <returns>The available actions.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetDefaultAction">
      <summary>Returns the default action for the DataClass.</summary>
      <returns>The default action for the DataClass.</returns>
      <exception cref="T:System.InvalidMetadataPropertyException">The metadata property is invalid.</exception>
      <exception cref="T:System.MetadataObjectNotFoundException">The default action is not part of the action set of this entity.</exception>
      <exception cref="T:System.MissingMetadataPropertyException">The metadata property is missing.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetLobSystem">
      <summary>Gets the external system of this data class.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.MetadataModel.ILobSystem" />.The external system of this data class.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethodInstance(System.String,Microsoft.BusinessData.MetadataModel.MethodInstanceType)">
      <summary>Gets the method instance with the specified name and stereotype.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.MetadataModel.IMethodInstance" />.The method instance.</returns>
      <param name="name">The name of the method instance.</param>
      <param name="stereotype">The stereotype of method instance to return.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethodInstances">
      <summary>Gets the method instances of this data class.</summary>
      <returns>The method instances of this data class.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethodInstances(Microsoft.BusinessData.MetadataModel.MethodInstanceType)">
      <summary>Gets the method instances of this data class with the given stereotype.</summary>
      <returns>The method instances of this data class with the given stereotype.</returns>
      <param name="stereotype">The stereotype of method instances to return.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethods">
      <summary>Gets the methods of this data class.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.MetadataModel.Collections.INamedMethodDictionary" />.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IDataClass.Namespace">
      <summary>Gets the namespace of the given data class.</summary>
      <returns>Returns <see cref="T:System.String" />.The namespace of the given data class.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IDataClass.Version">
      <summary>Gets the version of this external content type.</summary>
      <returns>Returns <see cref="T:System.Version" />.The version of this external content type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IEntity">
      <summary>Represents an external content type such as Customer or Product, in a line-of-business (LOB) application.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Associate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Associates the given source external items with the given destination external item.</summary>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="destinationEntityInstance">The destination instance.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The external system instance to connect to.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateAssociatedIds(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets pairs of source identities and destination identity for existing associated external items with the default filters.</summary>
      <returns>The pairs of source identities and destination identity.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="associatedIdEnumerator">The BulkAssociatedIdEnumerator method to use.</param>
      <param name="lsi">The external system instance to use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateAssociatedIds(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets pairs of source identities and destination identity for existing associated external items with the specified filter collection.</summary>
      <returns>Pairs of source identities and destination identity.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="associatedIdEnumerator">The BulkAssociatedIdEnumerator method to use.</param>
      <param name="filters">The filters to use.</param>
      <param name="lsi">The external system instance to use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateIdentities(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates the given identities.</summary>
      <returns>An enumerator.</returns>
      <param name="identities">The given identities.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CheckAccess(Microsoft.BusinessData.Runtime.Identity[],Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the access rights of the given external item identities for the given LobSystem instance.</summary>
      <returns>A long number representing access rights.</returns>
      <param name="instanceIdentities">The instance identities.</param>
      <param name="lobSystemInstance">An external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item.</summary>
      <returns>The identity of the created external item.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="lsi">An LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item that is associated with other external items.</summary>
      <returns>The identity of the created external item.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="associatedInstances">The external items that are associated with this instance during creation.</param>
      <param name="lsi">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item.</summary>
      <returns>The identity of the created external item.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="lsi">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item.</summary>
      <returns> The identity of the created external item.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="associatedInstances">The external items that are associated with this instance during creation.</param>
      <param name="lsi">LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the newly created instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="lsi">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an external item with a external system instance, a specific operation mode, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="lsi">The external system instance.</param>
      <param name="mode">The mode in which to create the external item instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item associated with other external items, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="associatedInstances">The external items that are associated with this instance during creation.</param>
      <param name="lsi">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an external item, with a specific OperationMode object, associated with other external items, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="associatedInstances">The external content type instances that are associated with this instance during creation.</param>
      <param name="lsi">The external system instance.</param>
      <param name="mode">The mode in which to create the external item.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item with an assigned identity, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="lsi">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an external item with an assigned identity and a specific OperationMode object, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="lsi">The external system instance.</param>
      <param name="mode">The mode in which to create the external item.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an external item with a specific identity, associated with other external items, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the newly created instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity to be assigned to the instance.</param>
      <param name="associatedInstances">The external items that are associated with this instance during creation.</param>
      <param name="lsi">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an external item with a specific identity and OperationMode object, associated with other external item s, and sets all fields of the external content type to the given values with an update.</summary>
      <returns>A reference to the newly created instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="associatedInstances">The external item s that are associated with this instance during creation.</param>
      <param name="lsi">The external system instance.</param>
      <param name="mode">The mode in which to create the external item.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Disassociate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Disassociates the given source external items from the given destination external item.</summary>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="destinationEntityInstance">The destination instance.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateChangedIdentities(System.DateTime,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates the identities of changed external items.</summary>
      <returns>The enumerator to external items with minimal data.</returns>
      <param name="timeStamp">A timestamp.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateDeletedIdentities(System.DateTime,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates the external items that have been modified after the specified time.</summary>
      <returns>The enumerator to external items with minimal data.</returns>
      <param name="timeStamp">The time to get changes since.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateIdentities(Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates identities.</summary>
      <returns>The enumerator to external items with minimal data.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IEntity.EstimatedInstanceCount">
      <summary>Gets the number of expected external items of this external content type.</summary>
      <returns>The number of expected instances.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.ExecuteScalar(System.String,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Executes a scalar MethodInstance object with the given name, filters values, and the given LobSystemInstance object, and returns the result.</summary>
      <returns>The result object.</returns>
      <param name="methodInstanceName">Name of the method instance.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The given external system object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets external items that are associated with the specified external items.</summary>
      <returns>An enumerator to the external items.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the external items that are associated with the specified source external items using the specified mode of operation..</summary>
      <returns>An enumerator to the external items.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="mode">The operation mode to read the external items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the external items that are associated with the specified source external items and association, filtered by the specified criteria.</summary>
      <returns>An enumerator to the external items.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the external items that are associated with the specified source external items and association, filtered by the specified criteria, using the specified mode of operation.</summary>
      <returns>An enumerator to the external items.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="mode">operation mode to read the external items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the external items that are associated to the given source external items.</summary>
      <returns>The external items that are associated to the given source external items.</returns>
      <param name="sourceEntityInstances">The source external items.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the external items that are associated to the given source external items by using the specified mode of operation.</summary>
      <returns>The external items that are associated to the given source external items.</returns>
      <param name="sourceEntityInstances">The source external items.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
      <param name="mode">The OperationMode object to read the external items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the external items that are associated to the given source external items by applying a specified filter collection.</summary>
      <returns>The external items that are associated to the given source external items.</returns>
      <param name="sourceEntityInstances">The source external items.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the external items that are associated to the given source external items by applying a specified filter collection and using the specified mode of operation.</summary>
      <returns>The external items that are associated to the given source external items.</returns>
      <param name="sourceEntityInstances">The source external items.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
      <param name="mode">The OperationMode object to read the external items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Returns external items filtered by the given criteria using the default Finder.</summary>
      <returns>An enumerator to the external items.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Returns external items filtered by the given criteria using the specified Finder.</summary>
      <returns>An enumerator to the external items.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="finderName">The name of the finder.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Returns external items filtered by the given criteria using the specified Finder and the specified mode of operation.</summary>
      <returns>An enumerator to the external items.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="finderName">The name of the finder.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="mode">The OperationMode object to read the external items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the external item with the given identity for the default SpecificFinder MethodInstance object.</summary>
      <returns>An external item.</returns>
      <param name="identity">The given identity.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Boolean)">
      <summary>Gets the external item with the given identity for the default SpecificFinder MethodInstance object with an option to read immediately or on the first function call that requires a read.</summary>
      <returns>An external item.</returns>
      <param name="identity">The identity of the external item.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="readNow">true to read the data immediately; otherwise, the data is read on the first function call that requires a read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the external item with the given identity for a SpecificFinder MethodInstance object.</summary>
      <returns>An external item.</returns>
      <param name="identity">The identity of the external item.</param>
      <param name="specificFinderName">The name of the SpecificFinder MethodInstance object.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the external item with the given identity for a specific SpecificFinder MethodInstance object with the given OperationMode object.</summary>
      <returns>An external item.</returns>
      <param name="identity">The identity of the external item.</param>
      <param name="specificFinderName">The name of the SpecificFinder MethodInstance object.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="mode">The OperationMode object to read the external items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode,System.Boolean)">
      <summary>Gets the external item with the given identity for a specific SpecificFinder MethodInstance object and a given OperationMode object, with an option to read the data immediately or read it on the first function call that requires a read.</summary>
      <returns>An external item.</returns>
      <param name="identity">The identity of the external item.</param>
      <param name="specificFinderName">The name of the SpecificFinder MethodInstance object.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="mode">The OperationMode object to read the external items.</param>
      <param name="readNow">true to read the data immediately; otherwise, the data is read on the first function call that requires a read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Boolean)">
      <summary>Gets the external item with the given identity for a specific SpecificFinder MethodInstance object and a given LobSystem instance, with an option to read the data immediately or read it on the first function call that requires a read.</summary>
      <returns>An external item.</returns>
      <param name="identity">The identity of the external item.</param>
      <param name="specificFinderName">The name of the SpecificFinder .</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="readNow">true to read the data immediately; otherwise, the data is read on the first function call that requires a read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecificMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets a group of external items using the specified external item identities, the default OperationMode object, and the BulkSpecificFinder MethodInstance.</summary>
      <returns>A group of external items.</returns>
      <param name="identities">The set of identities to retrieve external content type instances for.</param>
      <param name="lsi">The LobSystem instance to execute the bulk specific finder against.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecificMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets a group of external items using the specified external item identities and the default OperationMode object.</summary>
      <returns>A group of external items.</returns>
      <param name="identities">The set of identities to retrieve external items for.</param>
      <param name="bulkSpecificFinderName">The name of the BulkSpecificFinder MethodInstance to execute.</param>
      <param name="lsi">The LobSystem instance to execute the BulkSpecificFinder MethodInstance against.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecificMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets a group of external items using the external item identities.</summary>
      <returns>A group of external items.</returns>
      <param name="identities">The set of identities to retrieve external items for.</param>
      <param name="bulkSpecificFinderName">The name of the BulkSpecificFinder MethodInstance object to execute.</param>
      <param name="lsi">The LobSystem instance to execute the BulkSpecificFinder MethodInstance object against.</param>
      <param name="mode">The OperationMode object to use when executing the BulkSpecificFinder MethodInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetAssociationGroups">
      <summary>Gets all the association groups of this external content type.</summary>
      <returns>All the association groups of this external content type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetAssociationView(Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Gets the View of the association.</summary>
      <returns>The View of the association.</returns>
      <param name="association">The association to get the View for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetBulkIdentityEnumeratorView">
      <summary>Gets the View for the BulkIdEnumerator.</summary>
      <returns>The View for the BulkIdEnumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetBulkSpecificFinderView(System.String)">
      <summary>Gets the View for the given BulkSpecificFinder.</summary>
      <returns>The View for the given BulkSpecificFinder.</returns>
      <param name="methodInstanceName">The name of the MethodInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetChangedIdentityEnumeratorView">
      <summary>Gets the View for the ChangedIdEnumerator.</summary>
      <returns>The View for the given ChangedIdEnumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetCreatorView(System.String)">
      <summary>Gets the View for the given Creator or SpecificFinder.</summary>
      <returns>The View for the given MethodInstance.</returns>
      <param name="methodInstanceName">Name of the SpecificFinder or a Creator.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultBulkSpecificFinderView">
      <summary>Gets the View for the default BulkSpecificFinder .</summary>
      <returns>The View for the BulkSpecificFinder .</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultFinderFilters">
      <summary>Gets the filters for the default Finder.</summary>
      <returns>The filter collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultOperationMode">
      <summary>Gets the default OperationMode for this external content type.</summary>
      <returns>The default OperationMode.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultSpecificFinderView">
      <summary>Gets the View for the default SpecificFinder .</summary>
      <returns>The View for the default SpecificFinder.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDeletedIdentityEnumeratorView">
      <summary>Gets the View for the DeletedIdEnumerator.</summary>
      <returns>The View for the DeletedIdEnumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDestinationAssociations">
      <summary>Gets the associations in which this external content type is a destination.</summary>
      <returns>The associations in which this external content type is a destination.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetFinderView(System.String)">
      <summary>Gets the View for the given Finder.</summary>
      <returns>The View of the Finder.</returns>
      <param name="methodInstanceName">The name of the Finder .</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetIdentifierCount">
      <summary>Gets the number of identifiers of this external content type.</summary>
      <returns>The number of identifiers.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetIdentifiers">
      <summary>Gets identifiers of this external content type.</summary>
      <returns>The collection of identifiers.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetIdentityEnumeratorView">
      <summary>Gets the View for the IdEnumerator.</summary>
      <returns>The View for the IdEnumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetSecurityDescriptor(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the security descriptor of the external item with the given identity from the the given external system instance.</summary>
      <returns>The security descriptor.</returns>
      <param name="id">The identity of the external item.</param>
      <param name="lsi">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetSourceAssociations">
      <summary>Gets the associations in which this external content type is a source.</summary>
      <returns>The collection of associations in which this external content type is a source.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetSpecificFinderView(System.String)">
      <summary>Gets the View for the given SpecificFinder.</summary>
      <returns>The View for the SpecificFinder.</returns>
      <param name="methodInstanceName">The name of the SpecificFinder.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetUpdaterView(System.String)">
      <summary>Gets the View for the given updater.</summary>
      <returns>The View for the updater.</returns>
      <param name="updaterName">The name of the updater.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IEntityReference">
      <summary>Represents a reference to an external content type.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IEntityReference.Name">
      <summary>Gets the name of the external content type.</summary>
      <returns>The name of the external content type.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IEntityReference.Namespace">
      <summary>Gets the namespace of the external content type.</summary>
      <returns>The namespace of the external content type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IField">
      <summary>Represents a data element in a View.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.ContainsLocalizedDisplayName">
      <summary>Determines whether the field contains a localized display name.</summary>
      <returns>true if the field contains the localized display name; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.DefaultDisplayName">
      <summary>Retrieves the default display name of the Field.</summary>
      <returns>The default display name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.LocalizedDisplayName">
      <summary>Retrieves the localized display name of the Field.</summary>
      <returns>The localized display name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.Name">
      <summary>Retrieves the name of the Field.</summary>
      <returns>The name of the field.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.TypeDescriptor">
      <summary>Retrieves the TypeDescriptor that describes this Field.</summary>
      <returns>The type descriptor.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IFilterDescriptor">
      <summary>Describes a filter.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.FilterField">
      <summary>Retrieves the Field in the view that is affected by the result of this filter, described by dot path notation.</summary>
      <returns>The field affected by the result of the filter.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.FilterType">
      <summary>Retrieves the type of the filter.</summary>
      <returns>The type of the filter.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.GetMethod">
      <summary>Returns the method that has this filter.</summary>
      <returns>The method that has this filter.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.GetTypeDescriptors">
      <summary>Retrieves the type descriptors associated with this filter.</summary>
      <returns>The type descriptors associated with the filter.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.Type">
      <summary>Retrieves the type of the filter implementation.</summary>
      <returns>The type of the filter implementation.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IIdentifier">
      <summary>Defines the properties of an external content type identifier.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IIdentifier.GetEntity">
      <summary>Returns the external content type that contains this identifier.</summary>
      <returns>The external content type that contains this identifier.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifier.IdentifierType">
      <summary>Retrieves the type of the identifier.</summary>
      <returns>The type of the identifier.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifier.OrdinalNumber">
      <summary>Retrieves the ordinal number of the identifier.</summary>
      <returns>The ordinal number of the identifier.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IIdentifierReference">
      <summary>Represents a reference to an identifier.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifierReference.Entity">
      <summary>Gets a reference to the external content type that contains the identifier.</summary>
      <returns>A reference to the external content type that contains the identifier.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifierReference.Name">
      <summary>Gets the name of the identifier.</summary>
      <returns>The name of the identifier.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ILobSystem">
      <summary>Represents an external system.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystem.Catalog">
      <summary>Gets the MetadataCatalog that this ILobSystem object is obtained from.</summary>
      <returns>The MetadataCatalog that this ILobSystem object is obtained from.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystem.GetDataClasses">
      <summary>Gets the data classes contained by this external system.</summary>
      <returns>The collection of the data classes.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystem.GetEntities">
      <summary>Gets the external content types contained by this external system.</summary>
      <returns>The collection of the external content types.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystem.GetLobSystemInstances">
      <summary>Gets the instances of this external system.</summary>
      <returns>The collection of external system instances.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ILobSystemInstance">
      <summary>Represents a LobSystemInstance.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.AssociateConnection(System.Object)">
      <summary>Associates the given connection to the current thread of control, which is then used for all operations executed on this thread. </summary>
      <param name="connection">The given connection to associate.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.CloseConnection">
      <summary>Closes the connection to this external system instance.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.CurrentConnection">
      <summary>Gets the current connection to this external system instance.</summary>
      <returns>The current connection object. If there are no connections for this external system instance, this property returns null.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.DisassociateConnection">
      <summary>Disassociates the current thread from any connection object. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.FlushConnections">
      <summary>Flushes the connections to this external system instance.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.GetDataClasses">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.GetEntities">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.GetLobSystem">
      <summary>Gets the external system containing this external system instance.</summary>
      <returns>The external system containing this external system instance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.OpenConnection">
      <summary>Opens a connection to this external system instance.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ILobSystemStruct">
      <summary>Represents the type information of an external system.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemStruct.ConnectionManagerType">
      <summary>Gets the type of the connection manager.</summary>
      <returns>The type of the connection manager.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemStruct.SystemType">
      <summary>Gets the type of the external system.</summary>
      <returns>The type of the external system.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemStruct.SystemUtilityType">
      <summary>Gets the type of the system utility.</summary>
      <returns>The type of the system utility.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMetadataCatalog">
      <summary>Provides access to metadata objects.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.CreateExecutionContext">
      <summary>Creates an execution context.</summary>
      <returns>The execution context.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.CurrentExecutionContext">
      <summary>Gets the currently active execution context.</summary>
      <returns>The currently active execution context.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetEntities(System.String)">
      <summary>Retrieves external content types whose names match the specified wildcard string.</summary>
      <returns>External content types that match the given criteria.</returns>
      <param name="wildcardedName">The name using a wildcard.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetEntities(System.String,System.String)">
      <summary>Retrieves external content types  in the given namespace and whose names match the specified wildcard string.</summary>
      <returns>External content types that match the given criteria.</returns>
      <param name="namespace">The namespace of the external content types. Namespaces are case sensitive.</param>
      <param name="wildcardedName">The name using a wildcard.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetEntity(System.String,System.String)">
      <summary>Gets the external content type with the given name and namespace.</summary>
      <returns>The required external content type. External content type names are case sensitive.</returns>
      <param name="namespace">The namespace of the external content type. Namespaces are case sensitive.</param>
      <param name="name">The given name of the external content type. Names are case sensitive.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetLoadController">
      <summary>Returns the load controller that is associated with the metadata catalog.</summary>
      <returns>The load controller.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetLobSystem(System.String)">
      <summary>Gets the external system with the given name.</summary>
      <returns>The external system.</returns>
      <param name="name">The name of the external system. Names are case sensitive.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetLobSystems(System.String)">
      <summary>Gets the external systems whose names match the specified wildcard string.</summary>
      <returns>The collection of external systems that match the criteria.</returns>
      <param name="wildcardedName">The name using a wildcard.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.Helper">
      <summary>Gets the runtime helper implementation for this metadata catalog.</summary>
      <returns>The runtime helper.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMetadataObject">
      <summary>Represents a metadata object.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.ContainsLocalizedDisplayName">
      <summary>Determines whether this metadata object contains a localized display name.</summary>
      <returns>true if it contains a localized display name; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetDefaultDisplayName">
      <summary>Returns the default display name of this metadata object.</summary>
      <returns>The default display name of this metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetLocalizedDisplayName">
      <summary>Returns the localized display name of this metadata object.</summary>
      <returns>The localized display name of this metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetLocalizedNames">
      <summary>Returns the localized names of this metadata object.</summary>
      <returns>The collection of localized names of this metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetProperties">
      <summary>Returns the properties of this metadata object.</summary>
      <returns>The collection of properties of this metadata object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMetadataStruct">
      <summary>Represents a structure that contains the data fields of a metadata object. </summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataStruct.Id">
      <summary>Gets the identifier  of the metadata object.</summary>
      <returns>The identifier of the metadata object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataStruct.IsCached">
      <summary>Determines whether the metadata object is cached in memory.</summary>
      <returns>true if the metadata object cached in memory; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataStruct.Name">
      <summary>Gets the name of the metadata object.</summary>
      <returns>The name of the metadata object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMethod">
      <summary>Represents a method on an external content type.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.CreateDefaultParameterInstances(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Creates default values of the parameters for the given method instance.</summary>
      <returns>The object array containing parameters.</returns>
      <param name="methodInstance">The method instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetDataClass">
      <summary>Returns the data class of this method.</summary>
      <returns>The data class of this method.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetFilterDescriptors">
      <summary>Returns the filter descriptors of this method.</summary>
      <returns>A collection of filter descriptors.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetFilters(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Returns the filters for this method for the given method instance.</summary>
      <returns>A collection of filters.</returns>
      <param name="methodInstance">The method instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetMethodInstances">
      <summary>Returns the method instances of this method.</summary>
      <returns>A collection of method instances.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetParameters">
      <summary>Returns the parameters of this method.</summary>
      <returns>A collection of parameters of the method.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetSystemFilterDescriptors">
      <summary>Returns the filter descriptors of this method that describe system filters.</summary>
      <returns>A collection of filter descriptors.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethod.IsStatic">
      <summary>Determines whether the method is static.</summary>
      <returns>true if the method is static; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethod.LobName">
      <summary>Gets the name of the method on the external system.</summary>
      <returns>The name of the method on the external system</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMethodInstance">
      <summary>Represents stereotypical operation of a method on an external content type.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethodInstance.GetFilters">
      <summary>Gets the filters of the Method that contains this method instance that are initialized with default values of this method instance.</summary>
      <returns>A collection of filters of the method.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethodInstance.GetMethod">
      <summary>Gets the method that this instance belongs to.</summary>
      <returns>The method this instance belongs to.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethodInstance.GetReturnTypeDescriptor">
      <summary>Gets the type descriptor that corresponds to the structure returned by this method instance.</summary>
      <returns>The return type descriptor of this method instance.</returns>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The MethodInstance does not have a return value.</exception>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethodInstance.HasReturnTypeDescriptor">
      <summary>Determines whether the method instance has a return value.</summary>
      <returns>true if it has a return value; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethodInstance.IsDefault">
      <summary>Determines whether this method instance is the default instance for its type. </summary>
      <returns>true if it is the default; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethodInstance.MethodInstanceType">
      <summary>Gets the type of the method instance.</summary>
      <returns>The type of the method instance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException">
      <summary>Represents the exception that is thrown if the metadata object you are trying to access or create is not valid.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a metadata object, a field name, and an exception helper.</summary>
      <param name="metadataObject">The metadata object that is not valid.</param>
      <param name="fieldName">The field name that is not valid.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, a metadata object, a field name, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObject">The metadata object.</param>
      <param name="fieldName">The field name that is not valid.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String,System.Exception,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, the metadata object that is not valid, the field name that is not valid, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="invalidMetadataObject">The metadata object that is not valid.</param>
      <param name="invalidFieldName">The field name that is not valid.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the object serialization and streaming data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.Initialize(Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String)">
      <summary>Initializes the exception object.</summary>
      <param name="metadataObject">The metadata object.</param>
      <param name="fieldName">The field name.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.InvalidFieldName">
      <summary>Represents the field that is not valid.</summary>
      <returns>The field name string that is not valid.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.InvalidMetadataObject">
      <summary>Represents the metadata object that is not valid.</summary>
      <returns>The metadata object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.Message">
      <summary>Represents the exception message.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>A string representing the object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException">
      <summary>Represents the exception that is thrown if a metadata property is not valid.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.Exception,System.String,System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, an inner exception, a property name that is not valid, a metadata object name, a metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="invalidPropertyName">The property name that is not valid.</param>
      <param name="metadataObjectName">The metadata object name.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.String,System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, a property name that is not valid, a metadata object name, a metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="invalidPropertyName">The property name that is not valid.</param>
      <param name="metadataObjectName">The metadata object name.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using the property name that is not valid, a metadata object name, a metadata object type, and an exception helper.</summary>
      <param name="invalidPropertyName">The property name that is not valid.</param>
      <param name="metadataObjectName">The metadata object name.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using the metadata object type and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Retrieves object serialization and streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.InvalidPropertyName">
      <summary>Represents the name of the property that is not valid.</summary>
      <returns>The name of the property that is not valid.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.Message">
      <summary>Gets the exception message string.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.MetadataObjectName">
      <summary>Gets or sets the name of the metadata object that contains the property that is not valid.</summary>
      <returns>The name of the metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.ToString">
      <summary>Converts the object to a string.</summary>
      <returns>The object as a string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IParameter">
      <summary>Represents the in, in-out, out, and return parameters of each method.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IParameter.CreateDefaultInstance(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Creates an instance of this parameter using the default values associated with the specified method instance.</summary>
      <returns>An instance of the parameter.</returns>
      <param name="forMethodInstance">The MethodInstance.</param>
      <exception cref="T:System.InvalidOperationException">The direction of the parameter is “Out” or “Return”.</exception>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IParameter.Direction">
      <summary>Gets the direction of the parameter.</summary>
      <returns>The direction of the parameter.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IParameter.GetMethod">
      <summary>Gets the method that contains this parameter.</summary>
      <returns>The method that contains this parameter.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IParameter.GetRootTypeDescriptor">
      <summary>Gets the top-level (root) type descriptor.</summary>
      <returns>The root type descriptor.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IParameter.OrdinalNumber">
      <summary>Gets the ordinal number of the parameter in the method signature.</summary>
      <returns>The ordinal number of the parameter.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IParameter.TypeReflector">
      <summary>Gets the TypeReflector that corresponds to this parameter.</summary>
      <returns>The TypeReflector.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ITypeDescriptor">
      <summary>Represents a data structure in the external system.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.ContainsFilterDescriptor">
      <summary>Determines whether this type descriptor or one of its children reference a filter descriptor.</summary>
      <returns>true if the type descriptor or one of its children reference a filter descriptor; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.ContainsIdentifier">
      <summary>Determines whether this type descriptor or one of its children reference an identifier.</summary>
      <returns>true if the type descriptor or one of its children reference an identifier; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.ContainsReadOnly">
      <summary>Determines whether this type descriptor or one of its children represent a read-only data structure.</summary>
      <returns>true if this type descriptor or one of its children represent a read-only data structure; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.Flags">
      <summary>Retrieves flags of this type descriptor.</summary>
      <returns>Flags of the type descriptor.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetAssociation">
      <summary>Returns the association that corresponds to the identifier referenced by this type descriptor.</summary>
      <returns>The association that corresponds to the referenced identifier.</returns>
      <exception cref="T:System.InvalidOperationException">The type descriptor does not reference an association. This condition can be checked through the IsAssociationSet property.</exception>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">An association is referenced but could not be found.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetChildTypeDescriptors">
      <summary>Returns the type descriptors that correspond to the fields of the represented structure.</summary>
      <returns>The collection of the type descriptors that represent fields.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetFilterDescriptor">
      <summary>Retrieves the filter descriptor that is referenced by this type descriptor.</summary>
      <returns>The filter descriptor that is referenced by this type descriptor.</returns>
      <exception cref="T:System.InvalidOperationException">The type descriptor does not reference a filter descriptor. This condition can be checked through the IsFilterDescriptorSet property.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetIdentifier">
      <summary>Returns the identifier that is referenced by the type descriptor.</summary>
      <returns>The identifier that is referenced by the type descriptor.</returns>
      <exception cref="T:System.InvalidOperationException">The type descriptor does not reference an identifier. This condition can be checked through the IsIdentifierSet property.</exception>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">An identifier is referenced but could not be found.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetParameter">
      <summary>Returns the parameter that contains this type descriptor.</summary>
      <returns>The parameter that contains this type descriptor.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetParentTypeDescriptor">
      <summary>Returns the type descriptor that contains this type descriptor.</summary>
      <returns>The parent type descriptor.</returns>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">This type descriptor represents the root of a data structure. This condition can be checked through the IsRoot method.</exception>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.InterpretedTypeName">
      <summary> This element is reserved for future use and should not be used directly from your code.</summary>
      <returns>Reserved.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsAssociationSet">
      <summary>Determines whether this type descriptor references an association.</summary>
      <returns>true if this type descriptor references an association; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsCollection">
      <summary>Determines whether the described type represents a collection data structure.</summary>
      <returns>true if the type is represents collection data structure; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsFilterDescriptorSet">
      <summary>Determines whether this type descriptor references a filter descriptor.</summary>
      <returns>true if the type descriptor references a filter descriptor; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsIdentifierSet">
      <summary>Determines whether this type descriptor references an identifier.</summary>
      <returns>true if the type descriptor references an identifier; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsLeaf">
      <summary>Determines whether this type descriptor contains any type descriptors.</summary>
      <returns>true if the type descriptor does not contain any type descriptors; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsReadOnly">
      <summary>Determines whether this type descriptor represents a read-only data structure.</summary>
      <returns>true if the type descriptor represents a read-only data structure; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsRoot">
      <summary>Determines whether this type descriptor represents the root of a data structure.</summary>
      <returns>true if the type descriptor is a root; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.LobName">
      <summary>Retrieves the name of the field on the external system.</summary>
      <returns>The name of the field on the external system.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.TryGetDefaultValue(Microsoft.BusinessData.MetadataModel.IMethodInstance,System.Object@)">
      <summary>Attempts to get the default value of the type descriptor defined for the specified method instance.</summary>
      <returns>true if the value is found; otherwise, false.</returns>
      <param name="forMethodInstance">The method instance to get the default value for.</param>
      <param name="value">The returned default value.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.TypeName">
      <summary>Retrieves the name of the data type represented by this type descriptor.</summary>
      <returns>The name of the data type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IView">
      <summary>Represents a collection of fields, where fields are the data members of an external content type.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.Entity">
      <summary>Gets the external content type the view belongs to.</summary>
      <returns>The external content type the view belongs to.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.Fields">
      <summary>Gets the collection of fields in the view.</summary>
      <returns>The collection of fields in the view.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetDefaultValues">
      <summary>Gets a field value dictionary that contains the default values for this view.</summary>
      <returns>The field value dictionary that contains the default values for this view.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetType(System.String)">
      <summary>Gets the common language runtime type of the TypeDescriptor object that corresponds to a given dot notation.</summary>
      <returns>The common language runtime type of the TypeDescriptor.</returns>
      <param name="fieldDotNotation">The given dot notation.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetTypeDescriptor(System.String)">
      <summary>Gets the TypeDescriptor object that corresponds to the given dot notation.</summary>
      <returns>The TypeDescriptor object that corresponds to the given dot notation.</returns>
      <param name="fieldDotNotation">The given dot notation.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetXmlSchema">
      <summary>Gets the XML schema of the view.</summary>
      <returns>The XML schema of the view.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.Name">
      <summary>Gets the name of this View object. </summary>
      <returns>The name of this View object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.RelatedSpecificFinderName">
      <summary>Retrieves the name of the specific finder MethodInstance that this view is tied to.</summary>
      <returns>The name of the specific finder MethodInstance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.Verify(System.String)">
      <summary>Verifies whether the given dot notation maps to a TypeDescriptor object on this view.</summary>
      <returns>true if the given dot notation maps to a type descriptor on this view; otherwise, false.</returns>
      <param name="fieldDotNotation">The given dot notation.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MetadataException">
      <summary>Represents a base exception class that is thrown when the runtime engine encounters miscellaneous issues with Microsoft Business Connectivity Services (BCS) metadata.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String,System.Exception,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, the inner exception, the metadataObjectType object, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with the metadata object type and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the information about the metadata object that caused the exception.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataException.Message">
      <summary>Represents the error message.</summary>
      <returns>The error message.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataException.MetadataObjectType">
      <summary>Gets or sets the type of the metadata object that caused the exception.</summary>
      <returns>The metadata object that caused the exception.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>The exception object string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">
      <summary>Represents the exception thrown if the requested metadata object cannot be found in the Business Data Connectivity (BDC) service.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String,System.Exception,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, the inner exception, the metadata object type, the search criteria, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="searchCriteria">The search criteria.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, the metadata object type, the search criteria, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="searchCriteria">The search criteria.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a search criteria, a metadata object type, and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="searchCriteria">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class with serialization information and streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.Message">
      <summary>Returns the exception message string.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.SearchCriteria">
      <summary>Returns the exception search criteria.</summary>
      <returns>The search criteria.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.ToString">
      <summary>Converts the object to a string.</summary>
      <returns>The object as a string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MethodInstanceType">
      <summary>Represents the type of a MethodInstance.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Finder">
      <summary>A Finder MethodInstance identifies an operation on the external system that returns external items that match to the given criteria. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.FindFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />.  </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.SpecificFinder">
      <summary>A SpecificFinder MethodInstance identifies an operation on the external system that returns an external item given the corresponding <see cref="T:Microsoft.BusinessData.Runtime.Identity" />. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />.  </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.GenericInvoker">
      <summary>A GenericInvoker MethodInstance identifies an operation on the external system that executes arbitrary business logic. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.ExecuteScalar(System.String,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.IdEnumerator">
      <summary>An IdEnumerator MethodInstance identifies an operation on the external system that returns minimal information about existing external items. Related method:  <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateIdentities(Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Scalar">
      <summary>A Scalar MethodInstance identifies an operation on the external system that returns a single value as the result of arbitrary business logic. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.ExecuteScalar(System.String,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />.  </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.AccessChecker">
      <summary>An AccessChecker MethodInstance identifies an operation on the external system that returns the rights of the current user on the external items corresponding to given <see cref="T:Microsoft.BusinessData.Runtime.Identity" /> objects. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.CheckAccess(Microsoft.BusinessData.Runtime.Identity[],Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Creator">
      <summary>A Creator MethodInstance identifies an operation on the external system that creates an external item. Related methods: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" /> and <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Updater">
      <summary>An Updater MethodInstance identifies an operation on the external system that modifies the given external item. Related method: <see cref="M:Microsoft.BusinessData.Runtime.IEntityInstance.Update" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Deleter">
      <summary>A Deleted MethodInstance identifies an operation on the external system that deletes the external item. Related method: <see cref="M:Microsoft.BusinessData.Runtime.IEntityInstance.Delete" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.ChangedIdEnumerator">
      <summary>A ChangedIdEnumerator MethodInstance identifies an operation on the external system that returns minimal information about the external items that are modified after the given time. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateChangedIdentities(System.DateTime,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.DeletedIdEnumerator">
      <summary>A DeletedIdEnumerator MethodInstance identifies an operation on the external system that returns minimal information about external items that are deleted after the given time. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateDeletedIdentities(System.DateTime,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.AssociationNavigator">
      <summary>An AssociationNavigator MethodInstance identifies an operation on the external system that returns the external items that are related to the given external items. This MethodInstance is an Association. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />.  </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Associator">
      <summary>An Associator MethodInstance identifies an operation on the external system that creates a relationship between the given external items. This MethodInstance is an Association. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.Associate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Disassociator">
      <summary>A Disassociator MethodInstance identifies an operation on the external system that removes the relationship between given external items. This MethodInstance is an Association. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.Disassociate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.StreamAccessor">
      <summary>A StreamAccessor MethodInstance identifies an operation on the external system that returns streaming information about an external item corresponding to given <see cref="T:Microsoft.BusinessData.Runtime.Identity" />. Related method: <see cref="M:Microsoft.BusinessData.Runtime.IStreamableField.GetData" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BinarySecurityDescriptorAccessor">
      <summary>A BinarySecurityDescriptorAccessor MethodInstance identifies an operation on the external system that returns a security descriptor for the external item corresponding to the given <see cref="T:Microsoft.BusinessData.Runtime.Identity" />. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.GetSecurityDescriptor(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkSpecificFinder">
      <summary>A BulkSpecificFinder MethodInstance identifies an operation on the external system that returns external items corresponding to the given <see cref="T:Microsoft.BusinessData.Runtime.Identity" /> objects. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecificMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkAssociatedIdEnumerator">
      <summary>A BulkAssociatedIdEnumerator MethodInstance identifies an operation on the external system that returns the identities of all external items participating in a relationship that includes the given external items. This MethodInstance is an Association. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateAssociatedIds(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkAssociationNavigator">
      <summary>A BulkAssociationNavigator MethodInstance identifies an operation on the external system that returns external items that are related to the given set of external items. This MethodInstance is an Association. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkIdEnumerator">
      <summary>A BulkIdEnumerator MethodInstance identifies an operation on the external system that returns minimal information about the external items corresponding to the given <see cref="T:Microsoft.BusinessData.Runtime.Identity" /> objects. Related method: <see cref="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateIdentities(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},Microsoft.BusinessData.MetadataModel.ILobSystemInstance)" />. </summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException">
      <summary>Specifies the exception that is thrown when a particular metadata object instance does not have an expected property.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String,System.Exception,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, the inner exception, the metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, the metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with the metadata object type and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.SystemType">
      <summary>Represents an enumerator that identifies the type of the external system object.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.Database">
      <summary>Specifies that the external system is a database. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.WebService">
      <summary>Specifies that the external system is a Web service. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.Custom">
      <summary>Specifies custom external system connection logic. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.Wcf">
      <summary>Specifies the external system is a Windows Communication Foundation Web service. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.DotNetAssembly">
      <summary>Specifies that the external system is a .NET Framework assembly. </summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags">
      <summary>Describes flags for a type descriptor, such as whether the type descriptor is read-only, or whether the type descriptor is used as a field in a creator view.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.None">
      <summary>Specifies that there are no flags for the type descriptor. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.CreatorField">
      <summary>Determines whether this TypeDescriptor is used as a field in a creator. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.UpdaterField">
      <summary>Determines whether this TypeDescriptor is used as a field an updater with modified values of fields. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.PreUpdaterField">
      <summary>Determines whether this TypeDescriptor is used as a field in an updater with original values of fields.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.IsCollection">
      <summary>Determines whether this TypeDescriptor represents a collection of data structures. </summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.ReadOnly">
      <summary>Determines whether this TypeDescriptor represents a read-only data structure.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.Significant">
      <summary>Determines whether this TypeDescriptor represents a data structure, whose value is used in computing the hash value that identifies whether or not there are changes to the external item. </summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IEntityReferenceCollection">
      <summary>Represents a collection of IEntityReference objects.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.Collections.IEntityReferenceCollection.Item(System.String,System.String)">
      <summary>Gets the external content type reference with the given namespace and name.</summary>
      <returns>A reference with the given namespace and name.</returns>
      <param name="namespace">The namespace of the reference.</param>
      <param name="name">The name of the reference.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IFieldCollection">
      <summary>Represents the collection of fields of the current view.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IFilterDescriptorCollection">
      <summary>Represents the collection of filter descriptors.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IIdentifierCollection">
      <summary>Represents the collection of identifiers.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.ILocalizedNameDictionary">
      <summary>Represents a collection of localized names, indexed by locale identifiers (LCIDs).</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedActionDictionary">
      <summary>Represents the collection of named actions.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedActionParameterDictionary">
      <summary>Represents the collection of named action parameters.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedAssociationDictionary">
      <summary>Represents the collection of named associations.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedAssociationGroupDictionary">
      <summary>Represents the collection of named association groups. </summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedDataClassDictionary">
      <summary>Represents the collection of named data classes. For more information, see <see cref="T:Microsoft.BusinessData.MetadataModel.IDataClass" />.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedEntityDictionary">
      <summary>Represents the collection of named external content types.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedLobSystemDictionary">
      <summary>Represents the collection of named external systems.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedLobSystemInstanceDictionary">
      <summary>Represents the collection of external system instances.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedMethodDictionary">
      <summary>Represents the collection of named methods.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedMethodInstanceDictionary">
      <summary>Represents the collection of named method instances.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedPropertyDictionary">
      <summary>Represents the collection of named properties.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamespacedDataClassDictionaryDictionary">
      <summary>Represents the collection of the data classes of an external system.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.Collections.INamespacedDataClassDictionaryDictionary.GetEnumerator">
      <summary>Gets an enumerator of external content types in this dictionary.</summary>
      <returns>An enumerator of external content types in this dictionary.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary">
      <summary>Represents the collection of the external content types of this external system.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary.EntityCount">
      <summary>Gets the number of external content types in the collection.</summary>
      <returns>The number of external content types in the collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary.GetEnumerator">
      <summary>Gets an enumerator to the external content type collection.</summary>
      <returns>An enumerator to the external content type collection.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IParameterCollection">
      <summary>Represents the collection of parameters of a method. </summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.ITypeDescriptorCollection">
      <summary>Provides contextual information about a component, such as its container and property descriptor.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus">
      <summary>Represents the authoritative data status of the External Item.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Fresh">
      <summary>Indicates the authoritative data is valid and complies with the freshness requirements specified by the relevant cache subscriptions.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Stale">
      <summary>Indicates the authoritative data is valid, but is no longer fresh according to at least one cache subscription.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Obsolete">
      <summary>Indicates the authoritative data was valid at some point, but due to a local operation, it is very likely or true that the state of its data no longer reflects the expected external system state.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Invalid">
      <summary>Indicates the authoritative data is not valid because it was either constructed locally and does not represent the external system state, or it is internally inconsistent. Invalid is a transient state the system needs to perform initial population of the authoritative row; however, after it is fully populated with external system data, it never returns to the Invalid status.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException">
      <summary>Represents an exception that is thrown during installation or upgrade if any pending operation is found.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data. </summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ConflictData">
      <summary> A struct that represents the conflict between the local value and the external system value. Conflict is caused by the external item changing in the external system before the change done locally is propagated.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.authoritativeValue">
      <summary>Specifies the authoritative value of the conflicting field in the external system.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.currentValue">
      <summary>Specifies the current value of the conflicting field in the cache.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.fieldFullName">
      <summary>Specifies the fully qualified name of the conflicting field.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.fieldName">
      <summary>Specifies the name of the conflicting field.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IAssociationOperation">
      <summary>Defines properties that handle the association operation between two or more external content types.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAssociationOperation.Association">
      <summary>Retrieves the association that is modified by this operation.</summary>
      <returns>The association that is modified by this operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAssociationOperation.Destination">
      <summary>Gets the identity of the external item that is the destination of the association operation.</summary>
      <returns>The identity of the external item that is the destination of the association operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAssociationOperation.Sources">
      <summary>Gets the identities of the external items that are the source entities of the association operation.</summary>
      <returns>The identities of the external items that are the source entities of the association operation.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation">
      <summary>Defines properties of the External Item data that is read from the external system.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.ExpireAfter">
      <summary>Retrieves the time when the external item will be refreshed next.</summary>
      <returns>The time of the next refresh.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.LastException">
      <summary>Retrieves the exception information for the last refresh attempt if it failed. </summary>
      <returns>The exception information for the last refresh attempt. If the last refresh attempt succeeded, the exception information is null.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.LastRefreshed">
      <summary>Retrieves the timestamp of the last time the external item was read from the external system.</summary>
      <returns>The timestamp of the last time the external item was read from the external system.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.RetryCount">
      <summary>Retrieves the number of refresh retry attempts.</summary>
      <returns>The refresh retry count.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.Status">
      <summary>Indicates whether the authoritative data is fresh, stale, obsolete, or invalid.</summary>
      <returns>The status of the authoritative data.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ICacheChangeInfo">
      <summary>Represents an interface that tracks the change information for an item in the cache.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ICacheChangeInfo.GetOfflineEntityInstance">
      <summary>Gets the External Item that changed.</summary>
      <returns>The External Item that changed.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ICacheChangeInfo.Identity">
      <summary>Gets the identity of the changed item.</summary>
      <returns>The identity of the changed item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ICacheChangeInfo.IsDeleted">
      <summary>Gets whether the deletion of the external content type is reported.</summary>
      <returns>true if the deletion of the external content type delete is reported; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ICacheChangeInfo.Token">
      <summary>Gets a token that represents the number of the change.</summary>
      <returns>The change number.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IEntityInstanceReferenceCollection">
      <summary>Represents a collection of External Item references.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IEntityOperation">
      <summary>Represents the operations that are performed on an external content type.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IEntityOperation.GetPreviousState">
      <summary>Returns the state of the External Item before an update or delete operation.</summary>
      <returns>The state of the External Item before an update or delete operation. </returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IEntityOperation.GetResultingState">
      <summary>Returns the state of the External Item after a create or update operation.</summary>
      <returns>The state of the External Item after a create or update operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IEntityOperation.Identity">
      <summary>Gets the identity of the External Item to which the operation applies.</summary>
      <returns>The identity of the External Item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IEntityOperation.View">
      <summary>Gets the view of the operation.</summary>
      <returns>The view of the operation.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException">
      <summary>Represents an exception that is thrown when an error is encountered while executing a query on the External Item cache.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.InvalidTokenForViewException">
      <summary>Represents an exception that is thrown while getting the changed members of a subscription. This exception is thrown when the token belongs to a previously installed version of the view.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InvalidTokenForViewException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InvalidTokenForViewException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InvalidTokenForViewException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IOfflineEntityInstance">
      <summary>Represents an interface that defines methods and properties that handle the offline External Item.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.CancelAllInstanceOperations">
      <summary>Cancels all the operations of this External Item.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetAssociationOperations">
      <summary>Gets the association operations where this External Item is either the source or destination of the association.</summary>
      <returns>The association operations.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetAuthoritativeData">
      <summary>Gets the authoritative data of the External Item.</summary>
      <returns>The authoritative data of the External Item.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetAuthoritativeData(Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation@)">
      <summary>Gets the authoritative data of an External Item regardless of whether it is valid.</summary>
      <returns>The authoritative data of an External Item.</returns>
      <param name="authoritativeDataInformation">The existing authoritative data, regardless of whether it is valid. </param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetConflictData(Microsoft.BusinessData.Offlining.ConflictData[]@)">
      <summary>Gets the collection of fields that are in conflict between the External Item cache and the external system.</summary>
      <param name="conflictData">The collection of fields that are in conflict between the External Item cache and the external system.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetFailedAssociationOperations">
      <summary>Gets the collection of the failed association operations for which this External Item is either the source or the destination of the association.</summary>
      <returns>The collection of the failed association operations for which this External Item is either the source or the destination of the association.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetFailedOperation">
      <summary>Gets the failed operation, if there is one.</summary>
      <returns>The failed operation or null if there is no failed operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetLastOperation">
      <summary>Gets the most recent pending operation, if there is one.</summary>
      <returns>The most recent pending operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.HasAssociationErrors">
      <summary>Gets whether the External Item has any association errors.</summary>
      <returns>true if it has any association errors; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.IsAuthoritative">
      <summary>Gets whether the External Item is authoritative.</summary>
      <returns>true if authoritative; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.MakeObsolete">
      <summary>Forces a cache refresh of the External Item by marking the authoritative data state as obsolete.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.ReplaceChanges">
      <summary>Clears the error or conflict in the External Item and updates it with new values. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.RequestRefresh">
      <summary>Forces a cache refresh of the External Item by marking the next refresh time as now.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.SynchronizationStatus">
      <summary>Gets an enumeration of the synchronization status of this External Item.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.Offlining.SynchronizationStatus" />.The enumeration value that indicates the synchronization status of this External Item.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IOperation">
      <summary>Defines methods and properties that handle offline operations.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.ActivityId">
      <summary>Gets a value that identifies the activities that are executed in the local system and in the external system to synchronize this operation.</summary>
      <returns>A value that identifies the activities that are executed in the local system and in the external system to synchronize this operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.CancelAllDependentOperations">
      <summary>Cancels the current operation and all operations that depend on it.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.CancelSingleOperation">
      <summary>Cancels a single operation.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.Entity">
      <summary>Gets the external content type of the operation.</summary>
      <returns>The external content type of the operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.GetAllDependencies">
      <summary>Gets the collection of all operations this operation depends on.</summary>
      <returns>The collection of all operations that this operation depends on.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.GetDependentOperations">
      <summary>Gets the collection of all operations that depend on the current one.</summary>
      <returns>The collection of all operations that depend on the current one.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.GetDirectDependencies">
      <summary>Gets the collection of operations that this operation is directly dependent on.</summary>
      <returns>The collection of operations this operation is directly dependent on.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.Id">
      <summary>Gets the unique identifier of the operation.</summary>
      <returns>The unique identifier of the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.LastException">
      <summary>Gets the last exception thrown when executing the operation.</summary>
      <returns>The last exception thrown when executing the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.LastExecuted">
      <summary>Gets the date and time when the operation was last executed .</summary>
      <returns>The date and time of the operation that was executed last.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.LobSystemInstance">
      <summary>Gets the external system instance that the operation is executed against.</summary>
      <returns>The external system instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.MethodInstanceType">
      <summary>Gets the <see cref="T:Microsoft.BusinessData.MetadataModel.MethodInstanceType" /> of the operation.</summary>
      <returns>The <see cref="T:Microsoft.BusinessData.MetadataModel.MethodInstanceType" /> of the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.NextRetryAfter">
      <summary>Gets the earliest date and time after which the operation should be retried.</summary>
      <returns>The earliest date or time after which the operation should be retried.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.OperationStatus">
      <summary>Gets the status of the operation.</summary>
      <returns>The status of the operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.Retry">
      <summary>Retries the operation.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.RetryCount">
      <summary>Gets the count (number) of retries of the operation. </summary>
      <returns>The number of retries.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IOperationCollection">
      <summary>Represents a collection of operations.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IProgressSummary">
      <summary>Defines properties that indicate the status for a type of synchronization (operation execution, query execution, association execution, and instance refresh).</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IProgressSummary.Failed">
      <summary>Gets the number of items that failed processing.</summary>
      <returns>The number of items that failed processing.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IProgressSummary.Pending">
      <summary>Gets the number of items that are pending processing.</summary>
      <returns>The number of pending items.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IProgressSummary.Total">
      <summary>Gets the total number of items to process.</summary>
      <returns>The total number of items to process.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscription">
      <summary>Represents a client-only interface, which defines methods and properties that handle subscriptions.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.AddTemporaryMember(Microsoft.BusinessData.Runtime.Identity)">
      <summary>Adds an existing offline External Item to the list of subscription members of the subscription.</summary>
      <param name="id">The identity identifier.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Associations">
      <summary>Gets the collection of associations that are executed for the members of the subscription.</summary>
      <returns>The collection of associations.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.CancelHighPriorityRefresh">
      <summary>Cancels a high priority request for refreshing the subscription.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Enabled">
      <summary>Gets or sets whether the subscription is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.EntityVersion">
      <summary>Gets the version of the external content type that is populated by the subscription.</summary>
      <returns>The version of the external content type that is populated by the subscription.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.ExpireAfter">
      <summary>Gets or sets how often to refresh the cache subscription.</summary>
      <returns>The time span after which a refresh is due.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.FindMembersFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,System.String,System.Boolean)">
      <summary>Executes a Finder offline on subscription members.</summary>
      <returns>The subscription member instances returned by the specified Finder method and filtered by the specified filters.</returns>
      <param name="filterCollection">The filters to use.</param>
      <param name="finderName">The name of the Finder method to execute.</param>
      <param name="allowPartialData">true to return members with partial data; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetAssociationProgressSummary">
      <summary>Returns the progress information about associations to navigate for the subscription.</summary>
      <returns>The progress information about associations.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetChangedMembers(System.Int64)">
      <summary>Returns the members of the subscription that were added or modified since the previous call, as identified by the token. </summary>
      <returns>A list of member External Items.</returns>
      <param name="token">The members token.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetMemberCount">
      <summary>Returns the member count of this subscription.</summary>
      <returns>The member count.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetMemberProgressSummary">
      <summary>Returns the progress information about instances to refresh for the subscription.</summary>
      <returns>The progress information about instances to refresh.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetMembers">
      <summary>Returns the members of the subscription.</summary>
      <returns>The members of the subscription.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetQueryProgressSummary">
      <summary>Returns the progress information about queries of the subscription.</summary>
      <returns>The progress information about queries.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetStatus">
      <summary>Returns the refresh status of the subscription.</summary>
      <returns>The refresh status of the subscription.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Identities">
      <summary>Gets the collection of identities that are used to populate the subscription.</summary>
      <returns>The collection of identities.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.LastRefreshed">
      <summary>Gets the time when the last refresh of the subscription is completed.</summary>
      <returns>The time when the last refresh of the subscription is completed.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.LobSystemInstance">
      <summary>Gets the external system instance of the subscription.</summary>
      <returns>The external system instance of the subscription.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Queries">
      <summary>Gets the collection of queries that are used to populate the subscription.</summary>
      <returns>The collection of queries.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.RefreshStatus">
      <summary>Gets the refresh status of the cache subscription.</summary>
      <returns>The refresh status of the cache subscription.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.RequestRefresh">
      <summary>Triggers the refresh process for the cache subscription.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.RequestRefresh(System.Boolean)">
      <summary>Triggers the refresh process for the cache subscription with the specified priority.</summary>
      <param name="priority">true to set the refresh as high priority; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.Update">
      <summary>Updates the cache subscription definition.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.View">
      <summary>Gets the view that is populated by the cache subscription.</summary>
      <returns>The view that is populated by the cache subscription.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionAssociation">
      <summary>Defines methods and properties to handle subscription associations. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Delete">
      <summary>Deletes the subscription association from the association collection of the subscription.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.DestinationSubscription">
      <summary>Gets or sets a pointer to the subscription for the view returned by this association.</summary>
      <returns>A pointer to the subscription.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Enabled">
      <summary>Gets or sets whether the subscription association is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.ExpireAfter">
      <summary>Gets or sets how often to refresh the cache subscription association.</summary>
      <returns>The time span after which to refresh the cache.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Filters">
      <summary>Gets a collection of values that must be passed as input parameters to the association.</summary>
      <returns>The collection of values to pass as input parameters.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.LobSystemInstance">
      <summary>Gets or sets the external system instance that is used to execute the association.</summary>
      <returns>The external system instance that is used to execute the association.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.MethodInstance">
      <summary>Gets or sets the method instance definition for the association.</summary>
      <returns>The method instance definition.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.SourceSubscription">
      <summary>Gets the subscription that contains this association.</summary>
      <returns>The subscription that contains this association.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.TargetView">
      <summary>Gets the SpecificFinder view on the destination external content type that will be populated by the association.</summary>
      <returns>The SpecificFinder view on the destination external content type that will be populated by the association.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Update">
      <summary>Updates the subscription association definition.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionAssociationCollection">
      <summary>Represents an interface that defines the subscription association collection.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionAssociationCollection.Create(System.String,Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.TimeSpan,Microsoft.BusinessData.Offlining.ISubscription,Microsoft.BusinessData.MetadataModel.IView,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Creates a subscription association in the subscription association collection.</summary>
      <returns>The new subscription association.</returns>
      <param name="name">The name of the subscription association.</param>
      <param name="methodInstance">The excuted Association MethodInstance.</param>
      <param name="lobSystemInstance">The external system instance where the Association is executed.</param>
      <param name="expireAfter">Specifies how often the association is executed.</param>
      <param name="destinationSubscription">The subscription that will be populated with the associated destination external items.</param>
      <param name="targetView">The SpecificFinder view on the destination external content type that will be populated by the association.</param>
      <param name="properties">The key/value pair of properties.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionCollection">
      <summary>Defines a collection of subscriptions.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionManager">
      <summary>Represents an interface that contains all public subscription management methods.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscription(Microsoft.BusinessData.MetadataModel.IView,System.String)">
      <summary>Gets a single cache subscription given the view and the subscription name.</summary>
      <returns>The subscription.</returns>
      <param name="view">The view of the subscription.</param>
      <param name="subscriptionName">The subscription programmatic name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscription(System.Int32)">
      <summary>Gets a single cache subscription given its ID.</summary>
      <returns>The subscription.</returns>
      <param name="id">The given ID of the subscription.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscription(System.String,System.String,System.String,System.String)">
      <summary>Gets a single cache subscription given the fully qualified name of the view and the subscription name.</summary>
      <returns>The subscription.</returns>
      <param name="entityNamespace">The namespace of the subscription external content type.</param>
      <param name="entityName">The name of the subscription external content type.</param>
      <param name="viewName">The namespace of the subscription View.</param>
      <param name="subscriptionName">The subscription programmatic name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscriptions">
      <summary>Gets all subscriptions in the cache.</summary>
      <returns>All subscriptions in the cache.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscriptions(System.String)">
      <summary>Gets all the subscriptions in the cache that are associated with the given solution.</summary>
      <returns>All subscriptions in the cache associated with the given solution.</returns>
      <param name="solutionId">ID of the solution.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionQuery">
      <summary>Defines methods and properties that handle the subscription query.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Delete">
      <summary>Deletes the subscription query from the Queries collection of the subscription.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Enabled">
      <summary>Gets or sets whether the subscription query is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.ExpireAfter">
      <summary>Gets or sets how often to refresh the subscription query.</summary>
      <returns>The expiration time span.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Filters">
      <summary>Gets a collection of values that must be passed as input parameters to the query.</summary>
      <returns>A collection of query parameters.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.LastException">
      <summary>Gets the exception information of the last refresh attempt.</summary>
      <returns>The exception information of the last refresh attempt.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.LastRefreshed">
      <summary>Gets the DateTime value at which the query was last executed. </summary>
      <returns>The DateTime value at which the query was last executed.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.MethodInstance">
      <summary>Gets or sets the method instance definition for the query. </summary>
      <returns>The method instance definition for the query.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.RefreshStatus">
      <summary>Gets the refresh status of the query.</summary>
      <returns>The refresh status of the query.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Subscription">
      <summary>Gets the subscription that contains this query.</summary>
      <returns>The subscription that contains this query.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Update">
      <summary>Updates the subscription query definition information.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionQueryCollection">
      <summary>Represents an interface that defines the collection of subscription queries.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionQueryCollection.Create(System.String,Microsoft.BusinessData.MetadataModel.IMethodInstance,System.TimeSpan,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Creates a subscription query in the subscription query collection.</summary>
      <returns>The new subscription query.</returns>
      <param name="name">The name of the subscription query.</param>
      <param name="methodInstance">The MethodInstance. The external content type of the MethodInstance should match the external content type of the subscription.</param>
      <param name="expireAfter">Specifies how often to refresh the subscription query.</param>
      <param name="properties">The key/value property collection.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus">
      <summary>Represents an interface that defines the subscription refresh status.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus.HighPriority">
      <summary>Gets whether this is a high-priority subscription.</summary>
      <returns>true if high priority; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus.LastRefreshed">
      <summary>Indicates when the subscription refresh ended.</summary>
      <returns>A value that indicates the ending time of the last refresh.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus.RefreshStatus">
      <summary>Gets the refresh status of the subscription.</summary>
      <returns>The refresh status of the subscription.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISynchronizationManager">
      <summary>Contains all public synchronization management methods.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetAllInstancesInError(Microsoft.BusinessData.MetadataModel.IView)">
      <summary>Gets all External Items of a given view that are in error, including conflicts and read errors.</summary>
      <returns>The External Items of a given view that are in error.</returns>
      <param name="view">The view of the External Items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetAllOperationsInError">
      <summary>Gets all failed operations from the queue, including association errors.</summary>
      <returns>The failed operations from the queue.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetOperation(System.Int32)">
      <summary>Gets an operation given its identifier (ID).</summary>
      <returns>The operation.</returns>
      <param name="operationId">The ID of the operation to be read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetOperationExecutionSummary">
      <summary>Gets the current state of the queue in terms of the number of pending, failed, and completed operations.</summary>
      <returns>The progress summary.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetOperations">
      <summary>Gets all pending operations from the queue.</summary>
      <returns>The collection of the pending operations from the queue.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(Microsoft.BusinessData.MetadataModel.IEntity,Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the External Items and populates the cache using the specified destination external content type, source External Items, association, collection of filters, and external system instance.</summary>
      <param name="destinationEntity">The destination external content type of the association.</param>
      <param name="sourceEntityInstances">The source External Items.</param>
      <param name="association">The association to execute.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(Microsoft.BusinessData.MetadataModel.IEntity,Microsoft.BusinessData.Runtime.IFilterCollection,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the External Items and populates the cache using the specified external content type, collection of filters, finder method name, and external system instance.</summary>
      <param name="thisEntity">The external content type to populate.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="finderName">The name of the finder to execute.</param>
      <param name="lobSystemInstance">The external system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(Microsoft.BusinessData.MetadataModel.IView,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.Identity)">
      <summary>Gets the External Items and populates the cache using the specified view, external system instance, and identity.</summary>
      <param name="view">The view of the External Items.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="identity">The identity of the External Items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(System.String,System.String,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.Identity)">
      <summary>Gets the External Items and populates the cache using the specified view, external system instance, and identity.</summary>
      <param name="entityNamespace">The external content type namespace of the External Items.</param>
      <param name="entityName">The external content type name of the External Items.</param>
      <param name="viewName">The view of the External Items.</param>
      <param name="lobSystemInstance">The external system instance.</param>
      <param name="identity">The identity of the External Items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.ResolveIdentity(Microsoft.BusinessData.Runtime.Identity)">
      <summary>Gets an identity that has both the <see cref="P:Microsoft.BusinessData.Runtime.Identity.TemporaryId" /> and the identifier values array populated with the values that are currently available in the cache.</summary>
      <returns>The Identity currently available in the cache.</returns>
      <param name="identity">The Identity known to the cache.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.ResolveIdentity(System.Guid)">
      <summary>Gets an identity that has both the <see cref="P:Microsoft.BusinessData.Runtime.Identity.TemporaryId" /> and the identifier values array populated with the values that are currently available in the cache.</summary>
      <returns>The Identity that is currently available in the cache.</returns>
      <param name="temporaryId">The TemporaryId known to the cache.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISynchronizationManager.WorkOffline">
      <summary>Controls the change synchronization for the user who is logged on. </summary>
      <returns>The current value of the property.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.OperationDependencyFailedException">
      <summary>Represents an exception that is thrown when a dependent operation fails.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Offlining.OperationDependencyFailedException" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Offlining.OperationDependencyFailedException" /> class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Offlining.OperationDependencyFailedException" /> class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor(System.String,System.Exception,Microsoft.BusinessData.Offlining.IOperation)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Offlining.OperationDependencyFailedException" /> class by using a message, the inner exception, and the operation.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="operation">The current operation.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The serialization information about the requested data.</param>
      <param name="context">The streaming context of the requested data.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.OperationId">
      <summary>Gets an integer that represents the identifier (ID) of the failed operation.</summary>
      <returns>An integer that represents the ID of the failed operation.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.OperationStatus">
      <summary>Represents an enumeration that defines the operation status.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Succeeded">
      <summary>Specifies the operation succeeded.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.InProgress">
      <summary>Specifies the operation is in progress.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Failed">
      <summary>Specifies the operation failed.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Pending">
      <summary>Specifies the operation is pending.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Canceled">
      <summary>Specifies the operation is canceled.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.LongRunning">
      <summary>Specifies the operation has started a business process on the external system and no results are available.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.RefreshStatus">
      <summary>Represents an enumeration that describes the refresh status.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.Succeeded">
      <summary>Specifies that the refresh succeeded.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.InProgress">
      <summary>Specifies that the refresh is in progress.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.Failed">
      <summary>Specifies that the refresh failed.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.Unknown">
      <summary>Specifies that the refresh status is unknown.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.SynchronizationStatus">
      <summary>Represents an enumeration that defines data synchronization state between the cache and the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.Unchanged">
      <summary>Specifies the External Item has no changes to synchronize to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.PendingUpdate">
      <summary>Specifies the External Item was updated locally but the changes are not synchronized to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.PendingCreate">
      <summary>Specifies the External Item was created locally but the changes are not synchronized to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.PendingDelete">
      <summary>Specifies the External Item was deleted locally but the changes are not synchronized to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.InError">
      <summary>Specifies an error was encountered while synchronizing changes of the External Item to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.InConflict">
      <summary>Specifies the data in the cache and in the data source are not the same.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.RefreshNeeded">
      <summary>Specifies the External Item needs to be refreshed from the data source.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AdministrableProperty">
      <summary>Represents a single property that can be configured for the Business Connectivity Services connector.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AdministrableProperty.#ctor(System.String,System.String,System.Type,System.String,System.Type,System.Boolean)">
      <summary>Constructs a new instance of the class.</summary>
      <param name="displayName">The display name of the property.</param>
      <param name="description">The description of the property.</param>
      <param name="displayType">The type that describes how the property should be displayed.</param>
      <param name="propertyName">The name of the property in the metadata.</param>
      <param name="propertyType">The type of the property in the metadata.</param>
      <param name="isRequired">Specifies if this property is required for the connector to function.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.Description">
      <summary>Gets the description of the property that should be displayed in the user interface (UI).</summary>
      <returns>The description of the property.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.DisplayName">
      <summary>Gets the name of the property that should be displayed in the user interface (UI).</summary>
      <returns>The UI name of the property.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.DisplayType">
      <summary>Gets the type in which the property should be displayed in UI.</summary>
      <returns>The type of the property.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.IsRequired">
      <summary>Specifies if this property is required in the metadata.</summary>
      <returns>true if required; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.PropertyName">
      <summary>Gets the name of the property in metadata.</summary>
      <returns>The name of the property in metadata.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.PropertyType">
      <summary>Gets the type of the property in metadata.</summary>
      <returns>The type of the property in metadata.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary">
      <summary>Represents a dictionary with associations as a key, and External Item reference collection as a value.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary" /> class with the specified capacity.</summary>
      <param name="capacity">Initial size of the dictionary.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="capacity" /> is less than zero.</exception>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary">
      <summary>Represents a dictionary with associations as key and External Item collection as value.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary" /> class with the specified capacity.</summary>
      <param name="capacity">Initial size of the dictionary.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="capacity" /> is less than zero.</exception>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AuthenticationException">
      <summary>Specifies the error that is thrown when the Business Data Connectivity (BDC) service encounters an authentication problem with the external system, such as rejected or expired credentials.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The specified error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.String,System.Exception,System.Uri)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, and the URL that contains the credentials.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
      <param name="credentialEntryUrl">The URL where the credentials must be entered.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AuthenticationException.CredentialEntryUrl">
      <summary>Gets the credential entry URI.</summary>
      <returns>The credential entry URI.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the exception object into the specified serialization information object.</summary>
      <param name="info">The serialization information to hold the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.BackendNullReturnException">
      <summary>Represents an exception that is thrown when the external system method returns null for an object that is required for Microsoft Business Connectivity Services (BCS) to work correctly.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs">
      <summary>Represents a class that provides event arguments for the <see cref="T:Microsoft.BusinessData.Runtime.BatchCompletionEventHandler" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs" /> class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs.AdvanceToNextBatch">
      <summary>Gets or sets a value that indicates whether the enumerator should invoke the function to get another batch of External Items.</summary>
      <returns>true if the enumerator invokes the function, otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs.HasMoreBatches">
      <summary>Gets a value that indicates whether the enumeration has more batches.</summary>
      <returns>true if the enumeration has more batches; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.BatchCompletionEventHandler">
      <summary>Represents a method that handles the batch completion event.</summary>
      <param name="sender">The enumerator that raised this event.</param>
      <param name="args">Arguments of the event.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.CacheUsage">
      <summary>Represents an enumeration that specifies whether offline data cache should be used for an operation or not.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Default">
      <summary>Specifies the default target for operations. The default target is different based on the context and the external content type the operation is working with.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Online">
      <summary>Specifies the external system as the target of operations. All operations are executed directly against the external system. The data in the offline data cache will not be updated and will be ignored when External Items are requested.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Cached">
      <summary>Specifies offline data cache to be the target of operations. When a single External Item is requested, operations will attempt to get fresh data directly from the external system if the data in the offline data cache is not present or is stale; otherwise these operations will return data directly from the offline data cache. When multiple External Items are requested, operations will only return data from the offline cache, even if the information in the cache is stale or is not present. When External Items are updated, created, or deleted, the operation will be queued to be executed against the external system.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Offline">
      <summary>Specifies the offline data cache as the target of operations. All External Item requests will return only items from the offline data cache. When an External Item is created, updated, or deleted the operation will be queued to be executed against the external system.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.CannotConnectException">
      <summary>Thrown when the Business Data Connectivity (BDC) service cannot successfully make a connection to the external system business application.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.CannotConnectException" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.CannotConnectException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.CannotConnectException" /> class with the specified message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.CannotConnectException" /> class with the specified message and inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.ToString">
      <summary>Converts this exception to a string.</summary>
      <returns>The string representation of this exception.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ConflictDetectedException">
      <summary>Thrown when a conflict is detected between two different updates.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConflictDetectedException" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConflictDetectedException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConflictDetectedException" /> class with the specified message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConflictDetectedException" /> class with the specified message and inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException">
      <summary>Thrown when a connection cannot be obtained because the connection pool is full.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException" /> class with the specified external system instance and pool size.</summary>
      <param name="instance">The external system instance.</param>
      <param name="poolsize">The pool size.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException" /> class with the specified pool size.</summary>
      <param name="poolsize">The pool size.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException" /> class with the specified message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException" /> class with the specified message and inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the exception object into the specified serialization information object.</summary>
      <param name="info">The serialization information to hold the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>The string that represents exception object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.DynamicType">
      <summary>Represents an object whose structure can be modified at run time.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.DynamicType" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.DynamicType" /> class with the specified number of child elements.</summary>
      <param name="numberOfChildren">The initial number of slots for fields of this type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.DynamicType" /> class with the specified object type name.</summary>
      <param name="name">The name of this object's type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.DynamicType" /> class with the specified object type name and number of child elements.</summary>
      <param name="name">The name of this object's type.</param>
      <param name="numberOfChildren">The initial number of slots for fields of this type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds a field to the collection.</summary>
      <param name="item">The field to be added to the collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Add(System.String,System.Object)">
      <summary>Adds a key/value pair to the collection.</summary>
      <param name="key">The key object.</param>
      <param name="value">The value object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Clear">
      <summary>Removes all the items. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Checks whether the collection contains a specific item.</summary>
      <returns>true if the item is found; otherwise, false.</returns>
      <param name="item">The item to search for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.ContainsKey(System.String)">
      <summary>Checks whether the collection contains a specific key.</summary>
      <returns>true if the key is found; otherwise, false.</returns>
      <param name="key">The key to search for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the collection items to the specified array of key/value pairs starting at the specified index.</summary>
      <param name="array">The array to receive the items.</param>
      <param name="arrayIndex">The starting index.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Count">
      <summary>Gets the number of fields in the dynamic type.</summary>
      <returns>The number of fields.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.GetEnumerator">
      <summary>Returns an enumerator to the collection.</summary>
      <returns>The returned enumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.GetSchema">
      <summary>Returns the XML schema of the dynamic type.</summary>
      <returns>The XML schema of the dynamic type.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.IsReadOnly">
      <summary>Gets whether the dynamic type is read-only.</summary>
      <returns>true if read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Item(System.String)">
      <summary>Gets an item at a specific key.</summary>
      <returns>The item searched for.</returns>
      <param name="key">The key of the item.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Keys">
      <summary>Gets the collection of keys.</summary>
      <returns>The key collection.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Name">
      <summary>Gets the name of the dynamic type.</summary>
      <returns>The name of the dynamic type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.ReadXml(System.Xml.XmlReader)">
      <summary>Reads an XML document of the dynamic type.</summary>
      <param name="reader">The XML reader.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes a key/value entry from the collection. </summary>
      <returns>true if it succeeds; otherwise, false.</returns>
      <param name="item">The entry to be removed.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Remove(System.String)">
      <summary>Removes an item with a specified key string from the collection.</summary>
      <returns>true if it succeeds; otherwise, false.</returns>
      <param name="key">The key of the item to be removed.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection items to the specified array starting at the specified index.</summary>
      <param name="array">The destination array.</param>
      <param name="index">The starting index.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#ICollection#IsSynchronized">
      <summary>Gets whether the collection is synchronized.</summary>
      <returns>true if the collection is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#ICollection#SyncRoot">
      <summary>Synchronizes the top level (root) of the collection.</summary>
      <returns>The root of the collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adds a key/value pair to the collection.</summary>
      <param name="key">The key object.</param>
      <param name="value">The value object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Checks whether the collection contains an item with the specified key.</summary>
      <returns>true if the item is found; otherwise, false.</returns>
      <param name="key">The key of the item to check.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#GetEnumerator">
      <summary>Returns an enumerator to the dictionary.</summary>
      <returns>The returned enumerator.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#IsFixedSize">
      <summary>Gets a value that indicates whether the collection is of a fixed size. </summary>
      <returns>true if the collection is of a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Item(System.Object)">
      <summary>Gets or sets a field with the specified key.</summary>
      <returns>The field with the specified key.</returns>
      <param name="key">The key of the field.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Keys">
      <summary>Gets the keys in the collection.</summary>
      <returns>The key collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Removes a specified field from the collection.</summary>
      <param name="key">The key of the field to be removed.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Values">
      <summary>Gets the collection of values.</summary>
      <returns>The value collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator to the collection.</summary>
      <returns>The returned enumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.TryGetValue(System.String,System.Object@)">
      <summary>Searches for a value in the collection.</summary>
      <returns>true if the value is found; otherwise, false.</returns>
      <param name="key">The key of the item.</param>
      <param name="value">The value of the item.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Values">
      <summary>Gets the collection of field values in the dynamic type.</summary>
      <returns>The field value collection in the dynamic type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes an XML document.</summary>
      <param name="writer">The XML writer.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.EntityInstanceCollection">
      <summary>Represents the collection of External Items.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceCollection.#ctor">
      <summary>Constructs a new instance of the collection class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceCollection.#ctor(System.Int32)">
      <summary>Constructs a new instance of the collection class with initial capacity.</summary>
      <param name="capacity">The initial capacity.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.EntityInstanceReference">
      <summary>Represents a reference to an External Item. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.#ctor(Microsoft.BusinessData.Runtime.IEntityInstance)">
      <summary>Creates a reference to the given External Item.</summary>
      <param name="instance">The External Item to create a reference to.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Deserialize(System.String,Microsoft.BusinessData.MetadataModel.IMetadataCatalog)">
      <summary>Creates an EntityInstanceReference corresponding to the given string representation using metadata from the given Metadata Store.</summary>
      <returns>The created External Item reference.</returns>
      <param name="serializedReference">The string representation of an External Item reference.</param>
      <param name="catalog">The catalog to connect to the Metadata Store.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Equals(System.Object)">
      <summary>Checks whether two objects are identical.</summary>
      <returns>true if identical; otherwise, false.</returns>
      <param name="obj">The object to compare the given object to.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.GetHashCode">
      <summary>Returns the hash code for this object.</summary>
      <returns>The hash code for this object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.EntityInstanceReference.Identity">
      <summary>Gets the identity of the referenced External Item.</summary>
      <returns>The identity of the external content type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize">
      <summary>Returns the referenced External Item with default options. </summary>
      <returns>The referenced External Item.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize(Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Returns the referenced External Item by using the given operation mode. </summary>
      <returns>The referenced External Item.</returns>
      <param name="mode">The operation mode to use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize(Microsoft.BusinessData.Runtime.OperationMode,System.Boolean)">
      <summary>Returns the referenced External Item using the specified operation mode and the option to do a delayed read.</summary>
      <returns>The referenced External Item.</returns>
      <param name="mode">The operation mode to use.</param>
      <param name="readNow">true to retrieve all the fields of the External Item immediately from the external system; false to retrieve the fields only when needed.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize(System.Boolean)">
      <summary>Returns the referenced External Item with the option to do a delayed read.</summary>
      <returns>The referenced External Item.</returns>
      <param name="readNow">true to retrieve all the fields of the External Item immediately from the external system; false to retrieve the fields only when needed.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.ReferenceToView(System.String)">
      <summary>Creates a reference to another view of the same external content type instance.</summary>
      <returns>A reference to another view of the same External Item.</returns>
      <param name="targetSpecificFinderName">The name of the specific finder that should be the view of the returned entity instance reference. </param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Serialize">
      <summary>Gets a string representation of the entity instance reference.</summary>
      <returns>The string representation of the entity instance reference.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection">
      <summary>Represents a collection of references to External Items.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection" /> class with the specified capacity.</summary>
      <param name="capacity">The initial capacity.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ExceededLimitException">
      <summary>Represents the error that occurs when the operation exceeds the throttling limits set by the administrator.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ExceededLimitException" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ExceededLimitException" /> class from a serialized stream.</summary>
      <param name="info">The information that is required to deserialize the object.</param>
      <param name="context">The source of the serialized stream.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ExceededLimitException" /> class with a message.</summary>
      <param name="message">The message that the exception should use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.Runtime.ExceededLimitException" /> class with a message and an inner exception.</summary>
      <param name="message">The message that the exception should use.</param>
      <param name="inner">The inner exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ExecutingTooLongException">
      <summary>This class and its members are reserved for internal use and are not intended to be used in your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor(System.String)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor(System.String,System.Exception)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ExecutionEventHandler">
      <summary>Describes the signature of a handler that will be called either before or after the execution of a method. The handler is called to pre-process the inputs of the method to be executed or to post-process the outputs of the executed method. </summary>
      <param name="context">The context of the method execution.</param>
      <param name="executingMethod">The method to be executed or that finished execution.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IAdministrableSystem">
      <summary>Enables custom BDC connectors to report configurable connection properties that can be modified by the administrator.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IAdministrableSystem.AdministrableLobSystemInstanceProperties">
      <summary>Gets the list of properties for the external system instance.</summary>
      <returns>The list of properties for the external system instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IAdministrableSystem.AdministrableLobSystemProperties">
      <summary>Gets the list of properties for the external system.</summary>
      <returns>The list of properties for the external system instance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IAssociatedIdSet">
      <summary>Wraps the identities of associated External Items.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IAssociatedIdSet.GetDestinationIdentity">
      <summary>Gets the identity of the destination External Item.</summary>
      <returns>The identity of the destination External Item.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IAssociatedIdSet.GetSourceIdentity(Microsoft.BusinessData.MetadataModel.IEntity)">
      <summary>Gets the identity of the source External Item for the specified source external content type.</summary>
      <returns>The identity of the source External Item.</returns>
      <param name="source">The source external content type.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IAssociatedIdSetEnumerator">
      <summary>Defines an enumeration of identities of associated External Items.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IAssociatedIdSetEnumerator.Association">
      <summary>Gets the association that describes the relationship between the External Items.</summary>
      <returns>The association between External Items.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator">
      <summary>Defines properties and events that control batching.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator.Filters">
      <summary>Retrieves the collection of filters associated with the method instance that needs to be invoked to obtain the next set of entity instances..</summary>
      <returns>The collection of filters associated with the method instance that needs to be invoked to obtain the next set of entity instances.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator.IsBatchingEnabled">
      <summary>Gets or sets a value that indicates whether batching is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator.OnBatchCompletion">
      <summary>Represents the event of batch completion.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IBatchingTerminationFilter">
      <summary>Defines a property, a value, and a relationship to control batch termination.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IBatchingTerminationFilter.IsTerminated">
      <summary>Gets a value that indicates whether the batching process should be terminated.</summary>
      <returns>true if terminated; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ICloseable">
      <summary>Defines a method to close the server stream for the IEntityInstanceEnumerator interface.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ICloseable.Close">
      <summary>Closes the server stream.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.Identity">
      <summary>Defines the identifier values of an External Item.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Guid)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Guid,System.Object[])">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Object)">
      <summary>Constructs a new instance of the class by using an identifier value.</summary>
      <param name="identifierValue">The identifier value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Object[])">
      <summary>Constructs a new instance of the class by using an array of identifier values.</summary>
      <param name="identifierValues">An array of identifier values.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.Deserialize(System.String)">
      <summary>Retrieves the identity from the string form.</summary>
      <returns>The deserialized identity.</returns>
      <param name="serializedIdentity">A string that contains serialized identity.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.Equals(System.Object)">
      <summary>Checks whether two objects are equal.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="obj">An object to compare another object to.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.GetHashCode">
      <summary>Returns the hash code for this object.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.GetIdentifierValues">
      <summary>Provides access to identifier values.</summary>
      <returns>Identifier values.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.IdentifierCount">
      <summary>Returns the number of identifiers.</summary>
      <returns>The number of identifiers.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.IsTemporary">
      <summary>Checks whether the identity is temporary.</summary>
      <returns>true if temporary; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.Item(System.Int32)">
      <summary>Retrieves the element at the given index.</summary>
      <returns>The element at the given index.</returns>
      <param name="identifierIndex">The index of the requested item.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.Serialize">
      <summary>Converts the identity into its string representation.</summary>
      <returns>The string representation of the identity.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.TemporaryId">
      <summary>Returns the temporary part of the identity.</summary>
      <returns>The temporary part of the identity.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IEntityInstance">
      <summary>Defines methods and properties to handle an External Item.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Associate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Associates this External Item with the given External Items by using the given association.</summary>
      <param name="instances">The External Items to associate this External Item with. This collection must contain exactly on External Item for every source external content type of the given association.</param>
      <param name="association">The association.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Associate(Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Associates this External Item with the given External Item by using the given association.</summary>
      <param name="instance">The External Item to associate this External Item with.</param>
      <param name="association">The association. The given association must have a single source external content type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Delete">
      <summary>Deletes the External Item.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Disassociate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Removes the association between this External Item and the given External Items by using the given association.</summary>
      <param name="instances">The External Items to remove association from this External Item. This collection must contain exactly on External Item for every source external content type of the given association.</param>
      <param name="association">The association.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Disassociate(Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Removes the association between this External Item and the given External Item by using the given association</summary>
      <param name="instance">The External Item to remove association from this External Item.</param>
      <param name="association">The association. The given association must have a single source external content type</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.Entity">
      <summary>Gets the external content type of this External Item.</summary>
      <returns>The external content type of this External Item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.EntityAsDataTable">
      <summary>Gets the External Item as a DataTable with a single row of data containing the fields in the External Item.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> with one data row.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.EntityAsFormattedDataTable">
      <summary>Exposes the External Item as a DataTable object with the formatting of the complex fields in the External Item.</summary>
      <returns>A DataTable object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstanceIdentity(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.IEntity)">
      <summary>Gets the identity of the External Item that is associated with this External Item via the given association.</summary>
      <returns>The identity of the External Item.</returns>
      <param name="association">The association.</param>
      <param name="entity">The external content type of the External Item.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Gets the External Items associated with the given association.</summary>
      <returns>The associated External Items.</returns>
      <param name="association">The association to get associated External Items for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection)">
      <summary>Gets the External Items associated with the given association, using given filters.</summary>
      <returns>The associated External Items.</returns>
      <param name="association">The association to get the External Items for.</param>
      <param name="filters">The filters to be applied to the given association.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the External Items associated with the given association, using the given operation mode and filters.</summary>
      <returns>The associated External Items.</returns>
      <param name="association">The association to get the External Items for.</param>
      <param name="filters">The filters to be applied to the given association.</param>
      <param name="mode">The operation mode to use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the External Items associated with the given association, using the given operation mode.</summary>
      <returns>The associated External Items.</returns>
      <param name="association">The association to get the External Items for.</param>
      <param name="mode">The operation mode to use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetFormatted(Microsoft.BusinessData.MetadataModel.IField)">
      <summary>Gets the value of the specified field after applying complex formatting.</summary>
      <returns>String representation of the complex structure represented by the given field.</returns>
      <param name="field">The field in the External Item that represents a complex structure.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetFormatted(System.String)">
      <summary>Gets the value of the field with the specified dotted path after applying complex formatting.</summary>
      <returns>String representation of the complex structure represented by the given field.</returns>
      <param name="fieldName">The dotted path of a field in the External Item that represents a complex structure.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetIdentity">
      <summary>Gets the identity of this External Item.</summary>
      <returns>The identity of this External Item.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetSecurityDescriptor">
      <summary>Gets the security descriptor for this External Item.</summary>
      <returns>The security descriptor.</returns>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The external content type of this External Item does not contain a BinarySecurityDescriptorAccessor method instance.</exception>
      <exception cref="T:System.ArgumentException">The identity of this External Item is temporary, therefore cannot be used in the external system.</exception>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.InstanceOperationMode">
      <summary>Gets the operation mode that this External Item is working in.</summary>
      <returns>The operation mode.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.LobSystemInstance">
      <summary>Gets the external system instance that this External Item belongs to.</summary>
      <returns>The external system instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.RelatedSpecificFinderName">
      <summary>Gets the name of the specific finder this External Item is related to.</summary>
      <returns>The name of the related specific finder.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.SwitchView(System.String)">
      <summary>Gets a different view of the external instance.</summary>
      <returns>Same External Item with the given specific finders view.</returns>
      <param name="specificFinderName">The name of the specific finder to invoke to get the alternate view.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.SwitchView(System.String,System.Boolean)">
      <summary>Gets a different view of the external instance, with an option to do a delayed call to the external system.</summary>
      <returns>Same External Item with the given specific finders view.</returns>
      <param name="specificFinderName">The name of the specific finder to invoke to the the alternate view.</param>
      <param name="readNow">true if the new instance will be read immediately; false if it will be read when data is required.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Update">
      <summary>Submits the changes made to the External Item.</summary>
      <exception cref="T:System.InvalidOperationException">The External Item has been modified on the external system since it was last read or a suitable update method instance could not be found. </exception>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator">
      <summary>Represents an enumerator interface that enables reading External Items from collections or streams. </summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator.SharedEntityState">
      <summary>Retrieves the state shared across the External Items in the enumerator.</summary>
      <returns>The state.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IExecutionContext">
      <summary>Represents an execution context that is used to track and modify the behavior of operations against the external system, also allowing direct communication between a custom connector and the application.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionContext.ExecutedMethods">
      <summary>Gets a collection of methods executed in this context.</summary>
      <returns>The collection of methods executed in this context.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.IsManagedProperty(System.String)">
      <summary>Determines whether a property is managed by the execution context.</summary>
      <returns>true if the property is managed by the execution context; otherwise, false.</returns>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.IsPropertyDefined(System.String)">
      <summary>Determines whether the specified property exists in the execution context.</summary>
      <returns>true if the property exists in the execution context; otherwise, false.</returns>
      <param name="propertyName">The name of the property to check.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionContext.Item(System.String)">
      <summary>Gets or sets properties in this execution context, which will be accessible to the BDC connector. </summary>
      <returns>The property value in the execution context.</returns>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.ManageProperty(System.String)">
      <summary>Marks a property as managed, in which case, it will be disposed when the context is disposed.</summary>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="E:Microsoft.BusinessData.Runtime.IExecutionContext.MethodExecuted">
      <summary>Raised after a method is executed against the external system in this context.</summary>
    </member>
    <member name="E:Microsoft.BusinessData.Runtime.IExecutionContext.MethodExecuting">
      <summary>Raised before a method is executed against the external system in this context.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.UndefineProperty(System.String)">
      <summary>Removes the property from the execution context.</summary>
      <returns>true if the property is removed from the execution context; otherwise, false.</returns>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.UnManageProperty(System.String)">
      <summary>Marks a property as unmanaged, preventing it to be disposed when the execution context is disposed.</summary>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IExecutionInfo">
      <summary>Contains information about the execution of a method.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionInfo.Exception">
      <summary>Gets an exception thrown during execution.</summary>
      <returns>The exception that is thrown.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionInfo.LobSystemInstance">
      <summary>Gets the external system instance on which methods are to be executed.</summary>
      <returns>The external system instance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFieldAccessor">
      <summary>Provides functionality that enables the Business Data Connectivity (BDC) service runtime to get and set the values of fields in data structures that represent External Items.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldAccessor.GetFieldValue(System.String)">
      <summary>Retrieves the value of the field.</summary>
      <returns>The value of the field.</returns>
      <param name="fieldName">The name of the field.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldAccessor.SetFieldValue(System.String,System.Object)">
      <summary>Sets the value of the field.</summary>
      <param name="fieldName">The name of the field.</param>
      <param name="fieldValue">The value of the field.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFieldValueDictionary">
      <summary>Represents a collection of field/value pairs that correspond to a view.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.CalculateHashCode">
      <summary>Calculates the hash code from the values.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.CreateCollectionInstance(System.String,System.Int32)">
      <summary>Creates a new instance of the collection that the dot notation refers to.</summary>
      <returns>The instantiated collection.</returns>
      <param name="fieldDotNotation">The path to the collection.</param>
      <param name="size">The size of the collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.CreateInstance(System.String)">
      <summary>Creates a new instance of the object the dot notation refers to.</summary>
      <returns>The instantiated object.</returns>
      <param name="fieldDotNotation">The path to the object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.FromXml(System.String)">
      <summary>Sets the values in this dictionary from specified XML.</summary>
      <param name="xml">A string containing XML data.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.GetCollectionSize(System.String)">
      <summary>Returns the size of the collection that the dot notation refers to.</summary>
      <returns>The size of the collection.</returns>
      <param name="fieldDotNotation">The path to the collection.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFieldValueDictionary.Item(Microsoft.BusinessData.MetadataModel.IField)">
      <summary>Gets or sets the value for the specified field.</summary>
      <returns>The field value.</returns>
      <param name="field">The field to get or set.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFieldValueDictionary.Item(System.String)">
      <summary>Gets or sets the value of the field referred to by the dot notation.</summary>
      <returns>The field value in dot notation.</returns>
      <param name="fieldDotNotation">The field name in dot notation.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.ToXml">
      <summary>Retrieves the values in XML format.</summary>
      <returns>The XML values.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFieldValueDictionary.ViewDefinition">
      <summary>Gets the view of this field value dictionary.</summary>
      <returns>The view of the field value dictionary.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFilter">
      <summary>Represents the runtime filter.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFilter.FilterDescriptor">
      <summary>Gets the filter descriptor associated with this filter.</summary>
      <returns>The filter descriptor.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFilter.LocalizedDisplayName">
      <summary>Gets the localized display name of this filter.</summary>
      <returns>The localized display name of this filter.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFilterCollection">
      <summary>Represents the collection of filters of a method instance.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IInputOutputFilter">
      <summary>Represents a filter that has both an input value and an output value.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IInstance">
      <summary>Represents an instance of a data class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IInstance.AdapterObject">
      <summary>Gets the native data structure corresponding to this External Item.</summary>
      <returns>The native data structure of this External Item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IInstance.DataClass">
      <summary>Gets the data class that this instance is obtained from.</summary>
      <returns>The data class this instance is obtained from.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Invokes a method instance.</summary>
      <returns>The result of the execution.</returns>
      <param name="methodToExecute">The method instance to execute.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance,System.Object[]@)">
      <summary>Invokes a method instance.</summary>
      <returns>The object that is returned by the method.</returns>
      <param name="methodToExecute">The method instance to execute.</param>
      <param name="overrideArgs">The array of override arguments.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.GetActionUrl(Microsoft.BusinessData.MetadataModel.IAction)">
      <summary>Returns the URL of the specified action.</summary>
      <returns>The action URL.</returns>
      <param name="action">The Action whose URL to get.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.GetStreamableField(System.String)">
      <summary>Gets the streamable field corresponding to the given StreamAccessor method instance name.</summary>
      <returns>The streamable field.</returns>
      <param name="fieldName">The name of the StreamAccessor method instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.GetStreamableFields">
      <summary>Gets the collection for the streamable fields corresponding to the StreamAccessor method instances.</summary>
      <returns>The collection of streamable fields.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IInstance.TypeDescriptor">
      <summary>Gets the type descriptor corresponding to the  native data structure representing this instance.</summary>
      <returns>The type descriptor.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IMethodExecutionInfo">
      <summary>Provides information on a method instance that is executed or being executed against an external system.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.Filters">
      <summary>Gets the collection of filters used for the execution of the method instance.</summary>
      <returns>The collection of filters of the method instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.MethodInstance">
      <summary>Gets the method instance that is executing or executed.</summary>
      <returns>The method instance associated with this execution info..</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.Parameters">
      <summary>Gets the arguments of the method that is invoked or being invoked in native form.</summary>
      <returns>The arguments of the method in native form.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.SystemUtilityType">
      <summary>Gets the type of the system utility that handles communication with the external system.</summary>
      <returns>The type of the system utility.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IOutputFilter">
      <summary>Represents a filter that has a return value.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IOutputFilter.OutputTypeDescriptor">
      <summary>Gets the type descriptor corresponding to the data structure that stores the return value.</summary>
      <returns>The type descriptor.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IOutputFilter.Value">
      <summary>Gets the return value.</summary>
      <returns>The return value.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IProfileProvider">
      <summary>Provides methods to obtain profile values to be used with the UserProfile filter.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IProfileProvider.GetProfileValue(System.String)">
      <summary>Obtains the specified profile property value for the current user.</summary>
      <returns>The value of the property.</returns>
      <param name="propertyName">Name of the property to obtain.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IRuntimeHelper">
      <summary>Defines various helper functions for the Business Data Connectivity (BDC) service runtime.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.CreateDataTable(Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator)">
      <summary>Creates a DataTable with the data obtained from the given enumeration of External ItemExternal Items.</summary>
      <returns>A DataTable that is populated with the data.</returns>
      <param name="dataSource">The enumeration of External ItemExternal Items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.CreateDataTable(Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator,System.Boolean)">
      <summary>Creates a DataTable with the data obtained from the given enumeration of External ItemExternal Items, with an option to create an extra column to store identities of the External ItemExternal Items.</summary>
      <returns>A DataTable that is populated with the data.</returns>
      <param name="dataSource">The enumeration of External ItemExternal Items.</param>
      <param name="createSerializedIdColumn">true to create an additional column with the serialized identifier values of the External ItemExternal Items; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.CreateDataTable(Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator,System.Int32)">
      <summary>Creates a DataTable with the data obtained from the given enumeration of External ItemExternal Items with a specified maximum number of rows.</summary>
      <returns>A DataTable that is populated with the data.</returns>
      <param name="dataSource">The enumeration of External Items.</param>
      <param name="rowCount">The maximum number of rows.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.CreateDataTable(Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator,System.Int32,System.Boolean)">
      <summary>Creates a DataTable with the data obtained from the given enumeration of External Items with a specified maximum number of rows and an option to create an extra column to store identities of the External Items.</summary>
      <returns>A DataTable that is populated with the data.</returns>
      <param name="dataSource">The enumeration of External Items.</param>
      <param name="rowCount">The maximum number of rows.</param>
      <param name="createSerializedIdColumn">true to create an additional column with the serialized identifier values of the External Items; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.CreateDataTable(Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator,System.Int32,System.Int32)">
      <summary>Creates a DataTable with the data obtained from the given enumeration of External Items with a specified maximum number of rows and option to skip the given number of items.</summary>
      <returns>A DataTable that is populated with the data obtained from the specified entity instance enumerator.</returns>
      <param name="dataSource">The enumeration of External Items.</param>
      <param name="offsetFromStart">The number External Items to skip from the start of the enumeration.</param>
      <param name="rowCount">The maximum number of rows.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.CreateDataTable(Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates a DataTable with the data obtained from the given enumeration of External Items with a specified maximum number of rows, an option to skip the given number of items and an option to create an extra column to store identities of the External Items.</summary>
      <returns>A DataTable that is populated with the data obtained from the specified entity instance enumerator.</returns>
      <param name="dataSource">The enumeration of External Items.</param>
      <param name="offsetFromStart">The number External Items to skip from the start of the enumeration.</param>
      <param name="rowCount">The maximum number of rows.</param>
      <param name="createSerializedIdColumn">true to create an additional column with the serialized identifier values of the External Items; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.ExtractIdentity(Microsoft.BusinessData.Runtime.IFieldValueDictionary)">
      <summary>Extracts identity of an External Item from given fields.</summary>
      <returns>The extracted identity.</returns>
      <param name="fields">The fields that contain the identifier values.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.FilterMetadataObjectsByProperty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>Gets the metadata objects from the given collection that contains a property with the given name.</summary>
      <returns>An array of metadata objects that contain the given property.</returns>
      <param name="collection">The collection of metadata objects.</param>
      <param name="propertyName">The name of the property to look for.</param>
      <typeparam name="T">The type of the metadata object.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.FilterMetadataObjectsByProperty``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Object)">
      <summary>Gets the metadata objects from the given collection that contains a property with the given name and value.</summary>
      <returns>An array of metadata objects that contain the given property with the given value.</returns>
      <param name="collection">The collection of metadata objects.</param>
      <param name="propertyName">The name of the property to look for.</param>
      <param name="propertyValue">The value for the property to look for.</param>
      <typeparam name="T">The type of the metadata object.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.GetFirstItem``1(System.Collections.IEnumerable)">
      <summary>Gets the first metadata object in the enumeration.</summary>
      <returns>The first item in the enumeration.</returns>
      <param name="collection">The collection of objects that can be enumerated.</param>
      <typeparam name="T">The type of the metadata object.</typeparam>
      <exception cref="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">The given collection is empty.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.GetOutputFilterByName(Microsoft.BusinessData.Runtime.IFilterCollection,System.String)">
      <summary>Gets the output filter with the specified name from the specified filter collection.</summary>
      <returns>The output filter.</returns>
      <param name="filters">The collection of filters.</param>
      <param name="name">The name of the filter.</param>
      <exception cref="T:Microsoft.BusinessData.Runtime.ObjectNotFoundException">A user input filter with the given name does not exist in the given collection of filters.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.GetUserInputFilterByName(Microsoft.BusinessData.Runtime.IFilterCollection,System.String)">
      <summary>Gets the user input filter that has the given name from the filter collection.</summary>
      <returns>The available user input filter.</returns>
      <param name="filters">The collection of filters.</param>
      <param name="name">The name of the filter.</param>
      <exception cref="T:Microsoft.BusinessData.Runtime.ObjectNotFoundException">A user input filter with the given name does not exist in the given collection of filters.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.VerifyEntityInstanceReference(Microsoft.BusinessData.Runtime.EntityInstanceReference,System.String)">
      <summary>Checks whether the given External ItemExternal Item reference references an External ItemExternal Item in an external system instance with the given name.</summary>
      <returns>true if the External ItemExternal Item is from an external system instance with the given name; otherwise, false.</returns>
      <param name="reference">The reference to validate.</param>
      <param name="lobsystemInstanceName">The external system instance name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.VerifyEntityInstanceReference(Microsoft.BusinessData.Runtime.EntityInstanceReference,System.String,System.String)">
      <summary>Checks whether the given External ItemExternal Item reference references an External ItemExternal Item of the external content type with the given name and namespace.</summary>
      <returns>true if the reference is from the external content type with the specified namespace and name; otherwise, false.</returns>
      <param name="reference">The reference to validate.</param>
      <param name="entityNamespace">The namespace of the external content type.</param>
      <param name="entityName">The name of the external content type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.VerifyEntityInstanceReference(Microsoft.BusinessData.Runtime.EntityInstanceReference,System.String,System.String,System.String)">
      <summary>Checks whether the given External ItemExternal Item reference references an External ItemExternal Item of the external content type with the given name and namespace, and is obtained by the SpecificFinder method instance with the given name.</summary>
      <returns>true if the reference is from the external content type with the specified namespace and name, and from the given specific finder; otherwise, false.</returns>
      <param name="reference">The reference to validate.</param>
      <param name="entityNamespace">The namespace of the external content type.</param>
      <param name="entityName">The name of the external content type.</param>
      <param name="specificFinderName">The name of the specific finder.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISharedEntityState">
      <summary>Represents the shared external content type state information for an external content type's instances.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.ChildTypeDescriptors">
      <summary>Gets the type descriptors contained in the instances.</summary>
      <returns>The collection of the child type descriptors.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.DataTableForm">
      <summary>Gets the shared external content type state information as a DataTable object.</summary>
      <returns>A DataTable object containing the shared external content type state information.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.LobSystem">
      <summary>Gets the external system object of the external content type instances.</summary>
      <returns>An external system object representing the external system of the external content type instances.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.LobSystemInstance">
      <summary>Gets the external system instance of the external content type instances.</summary>
      <returns>An external system object representing the external system instance of the external content type instances.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.MemberRendererDictionary">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.MemberTypeDescriptorDictionary">
      <summary>Gets a list of type descriptors of the members contained in the external content type.</summary>
      <returns>A dictionary of type descriptors of the members in the external content type.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.RootTypeDescriptor">
      <summary>Gets the top level (root) type descriptor of the external content type instance.</summary>
      <returns>A TypeDescriptor object representing the type of the instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.RootTypeDescriptorParameter">
      <summary>Gets the parameter of the top level (root) type descriptor of the external content type instance.</summary>
      <returns>A Parameter object representing the parameter of the instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.TargetEntity">
      <summary>Gets the target external content type for the external content type instance.</summary>
      <returns>An external content type object that represents the target for the external content type instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.TargetEntityIdentifierTypeDescriptors">
      <summary>Gets the type descriptors for the identifiers in the target external content type for the external content type instance.</summary>
      <returns>A list of identifier type descriptors.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IStreamableField">
      <summary>Represents a streamable field.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IStreamableField.GetData">
      <summary>Returns the data stream of the field.</summary>
      <returns>The data stream.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableField.ParentInstance">
      <summary>Gets the External Item that this field belongs to.</summary>
      <returns>The External Item this field belongs to.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableField.StreamAccessorName">
      <summary>Gets the name of the MethodInstance that implements the access to the corresponding streamable field.</summary>
      <returns>The name of the MethodInstance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor">
      <summary>Defines properties that provide descriptive information about a field that can be streamed.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor.HasMimeType">
      <summary>Informs whether or not a MimeType is defined.</summary>
      <returns>true if defined; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor.MimeType">
      <summary>Gets a description of the contents of the stream.</summary>
      <returns>Description of the contents of the stream.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor.StreamAccessorName">
      <summary>Gets the name of the MethodInstance that opens and returns the stream.</summary>
      <returns>Name of the MethodInstance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptorCollection">
      <summary>Represents the descriptors collection of the fields that can be streamed.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemPropertyValidator">
      <summary>This interface can be implemented by custom connectors to provide property validation through administrative interfaces.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemPropertyValidator.ValidateLobSystemInstanceProperty(System.String,System.Object@,System.String,System.Type)">
      <summary>Validates an external system instance property.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">The property value.</param>
      <param name="metadataObjectName">The name of the metadata object.</param>
      <param name="metadataObjectType">The type of the metadata object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemPropertyValidator.ValidateLobSystemProperty(System.String,System.Object@,System.String,System.Type)">
      <summary>Validates an external system property.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">The property value.</param>
      <param name="metadataObjectName">The name of the metadata object.</param>
      <param name="metadataObjectType">The type of the metadata object.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemProxyAssemblyManager">
      <summary>This interface can be implemented by custom connectors that make use of multiple assemblies.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemProxyAssemblyManager.RetreiveAssemblyBytes(System.Byte[],System.Collections.Generic.IList{System.Byte[]}@)">
      <summary>Gets the primary proxy assembly and its dependent assembly bytes from the given data.</summary>
      <returns>The primary proxy assembly bytes.</returns>
      <param name="storedBytes">The data to extract assemblies from.</param>
      <param name="dependentAssemblies">A list containing the dependent assembly bytes.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemProxyGenerator">
      <summary>This interface can be implemented by custom connectors to generate a proxy to the external system.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemProxyGenerator.GenerateProxyAssembly(Microsoft.BusinessData.MetadataModel.ILobSystemStruct,Microsoft.BusinessData.MetadataModel.Collections.INamedPropertyDictionary)">
      <summary>Generates the proxy assembly for the given external system. </summary>
      <returns>An element that contains either the proxy as a byte array or the assembly object.</returns>
      <param name="lobSystemStruct">The external system to generate a proxy for.</param>
      <param name="lobSystemProperties">The properties of the external system.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemUtility">
      <summary>Represents the primary interface implemented by custom connectors.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemUtility.CreateEntityInstanceDataEnumerator(System.Object,Microsoft.BusinessData.Runtime.ISharedEntityState)">
      <summary>Converts line-of-business data stream into an enumerator of objects that represent external items.</summary>
      <returns>An enumerator that contains the objects that correspond to external items.</returns>
      <param name="rawStream">Line-of-business data stream to convert.</param>
      <param name="sharedEntityState">Shared state of external items that are going to be generated from the returned enumeration.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISystemUtility.DefaultConnectionManager">
      <summary>Gets the ConnectionManager instance that should be used with this system utility. This property should return null if the connector is not capable of explicit connection management.
</summary>
      <returns>The ConnectionManager instance</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISystemUtility.DefaultTypeReflector">
      <summary>Gets the TypeReflector instance that should be used with this SystemUtility by default. </summary>
      <returns>The TypeReflector instance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemUtility.ExecuteStatic(Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Object[],Microsoft.BusinessData.Runtime.IExecutionContext)">
      <summary>Executes a MethodInstance against the given external system instance with given parameters.</summary>
      <param name="mi">MethodInstance that is being executed.</param>
      <param name="si">External system instance which the method instance is being executed against.</param>
      <param name="args">Parameters of the method. The size of the parameter array is equal to the number of parameter objects in the method, and the values are going to be passed in order. Out and return parameters will be null.</param>
      <param name="context">ExecutionContext where this execution is happening in. This value will be null if ExecutionContext is not created.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IUserInputFilter">
      <summary>Represents a filter with one or more values that can be set.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IUserInputFilter.GetValueType">
      <summary>Returns the type of the value of this filter.</summary>
      <returns>The type of the value of this filter.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IUserInputFilter.Item(System.Int32)">
      <summary>Gets or sets value of the filter at the given index.</summary>
      <returns>The value of the filter at the given index.</returns>
      <param name="valueIndex">The given index.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IUserInputFilter.ValueCount">
      <summary>Gets the number of values for this filter.</summary>
      <returns>The number of values for this filter.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.LobBusinessErrorException">
      <summary>Exception that is thrown when a business logic error occurs during the method instance execution.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.
</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.LobGenericException">
      <summary>Represents an exception thrown when an error occurs in the line-of-business system during a method execution.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.
</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ObjectDeletedException">
      <summary>Exception that is thrown when you try to use an offline external item that has been scheduled for deletion.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ObjectNotFoundException">
      <summary>Thrown when an external item is not present.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.OperationMode">
      <summary>Specifies the mode in which  an operation is to be executed.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage)">
      <summary>Creates a new operation mode with a specified cache mode.</summary>
      <param name="cacheUsage">The specified cache mode.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.Boolean)">
      <summary>Creates a new operation mode with specified cache mode, and optionally allowing partial data.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="allowPartialData">Whether to allow partial data or not. This value is ignored if CacheUsage is set to Online.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.TimeSpan)">
      <summary>Creates a new operation mode with specified cache usage and freshness criterion.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="freshness">The attempted freshness. This value is ignored if CacheUsage is set to Online.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.TimeSpan,System.Boolean)">
      <summary>Creates a new operation mode with specified cache usage, freshness criterion, and optionally accepting partial data.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="freshness">The attempted freshness. This value is ignored if CacheUsage is set to Online.</param>
      <param name="allowPartialData">Whether to allow partial data or not. This value is ignored if CacheUsage is set to Online.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.TimeSpan,System.Boolean,System.Boolean)">
      <summary>Creates a new operation mode with specified cache usage, freshness criterion, and optionally accepting partial data and ignoring conflicts.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="freshness">The attempted freshness. This value is ignored if CacheUsage is set to Online.</param>
      <param name="allowPartialData">Whether to allow partial data or not. This value is ignored if CacheUsage is set to Online.</param>
      <param name="doNotDetectConflicts">Whether to ignore conflicts or not.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(System.Boolean)">
      <summary>Creates a new operation mode optionally allowing partial data.</summary>
      <param name="allowPartialData">Whether to allow partial data or not. This value is ignored if CacheUsage is set to Online.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(System.Boolean,System.Boolean)">
      <summary>Creates a new operation mode optionally allowing partial data and/or ignoring conflicts.</summary>
      <param name="allowPartialData">Whether to allow partial data or not. This value is ignored if CacheUsage is set to Online.</param>
      <param name="doNotDetectConflicts">Whether to ignore conflicts or not.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.AllowPartialData">
      <summary>Checks to see if the operation should return partial data.</summary>
      <returns>true if it should return partial data; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.CachedWithImmediateRefresh">
      <summary>Indicates that the item should be read from the external system if available, and the cache should be refreshed.</summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.CachedWithoutRefresh">
      <summary>Indicates that the item should be read from the cache if it is available.</summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.CacheUsage">
      <summary>Determines how the cache should be used.</summary>
      <returns>Type: <see cref="T:Microsoft.BusinessData.Runtime.CacheUsage" />.The cache usage.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.DoNotDetectConflicts">
      <summary>Checks to see whether the conflicts should be ignored.</summary>
      <returns>true if it should be ignored; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.Freshness">
      <summary>Determines how fresh the data is requested.</summary>
      <returns>A time interval that indicates how fresh the data is.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.Offline">
      <summary>Indicates that the item should be read from the cache. </summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.Online">
      <summary>Indicates that the item should be read from the external system. </summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.PartialBulkReadException">
      <summary>Represents an exception thrown when BulkSpecificFinder returns fewer items than requested.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.String,System.Exception,System.Collections.Generic.ICollection{Microsoft.BusinessData.Runtime.Identity},System.Collections.Generic.ICollection{Microsoft.BusinessData.Runtime.Identity})">
      <summary>Constructs a new instance of the class by using a message, the inner exception, and received and requested identities.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="requested">The requested identity collection, which represents the identities that are required to be read from the external system.</param>
      <param name="received">The received identity collection, which represents the identities returned by the external system.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes this exception into the specified serialization information object.</summary>
      <param name="info">The serialization information to hold the serialized exception.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.PartialBulkReadException.ReceivedIdentities">
      <summary>Gets a list of received identities.</summary>
      <returns>The list of received identities.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.PartialBulkReadException.RequestedIdentities">
      <summary>Gets a list of Requested identities.</summary>
      <returns>The list of Requested identities.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.PartialCreateException">
      <summary>Represents an exception thrown when a CreateWithFields operation needs to execute both Create and UpdateMethodInstances, and execution of Update MehtodInstance has failed.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.String,System.Exception,Microsoft.BusinessData.Runtime.Identity)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, and the identity of the created external item.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="identity">The runtime identity.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the current exception into the specified serialization information object.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.PartialCreateException.Identity">
      <summary>Gets the identity of the newly created external item.</summary>
      <returns>The identity of the newly created external item.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ProxyGenerationResult">
      <summary>Represents the results of proxy generation.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ProxyGenerationResult.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.Assembly">
      <summary>Gets or sets the generated assembly.</summary>
      <returns>The generated assembly.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.CompiledBytes">
      <summary>Gets or sets the binary bytes of the compiled proxy code (which may represent one or more System.Reflection.Assemblies).</summary>
      <returns>The binary bytes of the compiled proxy code.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.Fingerprint">
      <summary>Gets or sets the fingerprint or conceptual signature of the proxy, which may be used as a unique key with which to cache the result.</summary>
      <returns>The fingerprint or the conceptual signature of the proxy.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.IsValid">
      <summary>Determines whether the result is valid.</summary>
      <returns>true if the result is valid; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.SourceCode">
      <summary>Gets or sets the source code of the proxy.</summary>
      <returns>The source code of the proxy.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.RuntimeException">
      <summary>Represents any exception thrown by the Microsoft Business Connectivity Services (BCS).</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.SsoAuthenticationException">
      <summary>An exception that is thrown when a secure store related authentication problem occurs, such as when credentials obtained from SSO are being rejected by the external system or when SSO rejects the user-provided credentials.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The specified error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.String,System.Exception,System.String,System.Uri)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, and the URL the credentials can be entered.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
      <param name="targetApplication">The target application.</param>
      <param name="credentialEntryUrl">The URL where the credentials can be entered.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the exception object into the specified serialization information object.</summary>
      <param name="info">The serialization information to hold the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.SsoAuthenticationException.TargetApplication">
      <summary>Gets the target SSO application.</summary>
      <returns>The target application.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException">
      <summary>This class and its members are reserved for internal use and are not intended to be used in your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor(System.String)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor(System.String,System.Exception)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol">
      <summary>Represents an empty implementation of the SoapHttpClientProtocol class. This class relies on <see cref="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ExtensionType" /> property to provide SoapHttpClientProtocol class functionalities.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.BdcHttpCustomHeaderCollection">
      <summary>Gets the HTTP header name and value.</summary>
      <returns>The HTTP header name and value.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Overrides the implementation of the BeginInvoke method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class. This method calls the BeginInvoke method from the object created using the ExtensionType property.</summary>
      <returns>The asynchronous result.</returns>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
      <param name="asyncState">The asynchronous state.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
      <summary>Overrides the implementation of the EndInvoke method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class. This method calls the EndInvoke method from the object created using the <see cref="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ExtensionType" /> property.</summary>
      <returns>The object array.</returns>
      <param name="asyncResult">The asynchronous result.</param>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ExtensionType">
      <summary>Gets or sets the extension type.</summary>
      <returns>The extension type.</returns>
      <exception cref="T:System.InvalidOperationException">The property is being set to a type that does not implement the <see cref="T:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension" /> interface.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.GetWebRequest(System.Uri)">
      <summary>Overrides the base class functionality to add custom HTTP headers. The custom HTTP headers are read from the <see cref="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.BdcHttpCustomHeaderCollection" /> property.</summary>
      <returns>The Web request.</returns>
      <param name="uri">The URI of the Web service.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.GetWebResponse(System.Net.WebRequest)">
      <summary>Overrides the GetWebReponse method of the SoapHttpClientProtocol base class and provides the ThrottledWebResponse object.</summary>
      <returns>The Web response.</returns>
      <param name="request">The Web request.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.Invoke(System.String,System.Object[])">
      <summary>Overrides the implementation of the Invoke method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class. This method calls the Invoke method from the object created using <see cref="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ExtensionType" /> property.</summary>
      <returns>The output object array.</returns>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
      <summary>Overrides the implementation of the InvokeAsync method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class. This method calls the InvokeAsync method from the object created using <see cref="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ExtensionType" /> property.</summary>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
      <summary>Overrides the implementation of the InvokeAsync method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class. This method calls the InvokeAsync method from the object created using <see cref="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ExtensionType" /> property.</summary>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
      <param name="userState">The user state.</param>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.LobSystemInstance">
      <summary>Gets or sets the external system instance object.</summary>
      <returns>The external system instance object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ThrottledWebResponseType">
      <summary>Gets or sets the Web response type.</summary>
      <returns>The Web response type.</returns>
      <exception cref="T:System.InvalidOperationException">The property is being set to a type that does not inherit from System.Net.WebResponse.</exception>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension">
      <summary>Represents an extension interface for the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an XML Web service method using SOAP.</summary>
      <returns>An IAsyncResult that is passed to the <see cref="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the remote method call.</returns>
      <param name="methodName">The name of the XML Web service method in the implementation class that is invoking the BeginInvoke method.</param>
      <param name="parameters">An array of objects containing the parameters to pass to the XML Web service. The order of the values in the array correspond to the order of the parameters in the calling method of the implementation class.</param>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If <paramref name="callback" /> is null, the delegate is not called.</param>
      <param name="asyncState">Extra information supplied by the caller.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.EndInvoke(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of an XML Web service method using SOAP.</summary>
      <returns>An array of objects that contains the return value and any by-reference or out parameters of the implementation class method.</returns>
      <param name="asyncResult">The IAsyncResult that is returned from the <see cref="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.Invoke(System.String,System.Object[])">
      <summary>Invokes an XML Web service method synchronously using SOAP.</summary>
      <returns>An array of objects that contains the return value and any reference or out parameters of the implementation class method.</returns>
      <param name="methodName">The name of the XML Web service method.</param>
      <param name="parameters">An array of objects that contains the parameters to pass to the XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the implementation class.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
      <summary>Invokes the specified method asynchronously.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="parameters">The parameters to pass to the method.</param>
      <param name="callback">The delegate called when the method invocation has completed.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
      <summary>Invokes the specified method asynchronously.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="parameters">The parameters to pass to the method.</param>
      <param name="callback">The delegate called when the method invocation has completed.</param>
      <param name="userState">An object used to pass state information into the <paramref name="callback" /> delegate.</param>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IContextProperty">
      <summary>Provides a context for the Business Data Connectivity (BDC) service.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IContextProperty.ExecutionContext">
      <summary>Gets or sets the execution context set by the caller.</summary>
      <returns>The execution context set by the caller.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IContextProperty.LobSystemInstance">
      <summary>Gets or sets the external system instance object for the calling method.</summary>
      <returns>The external system instance object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IContextProperty.MethodInstance">
      <summary>Gets or sets the MethodInstance object for the calling method.</summary>
      <returns>The MethodInstance object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IStreamingAdapterObject">
      <summary>Represents an interface that is implemented by all connectors that need to support information streaming.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IStreamingAdapterObject.GetStream">
      <summary>Gets the stream.</summary>
      <returns>The stream.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IUsernamePassword">
      <summary>Represents an interface for customizing implementations of SOAP header authentications for the Windows Communication Foundation (WCF) connector.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IUsernamePassword.Password">
      <summary>Gets or sets a password credential secure string.</summary>
      <returns>The password credential secure string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IUsernamePassword.UserName">
      <summary>Gets or sets a user name credential secure string.</summary>
      <returns>The user name credential secure string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.ThrottleScope">
      <summary>Defines the scope of the throttling.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Global">
      <summary>Specifies a global type. (=0)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Database">
      <summary>Specifies a database system type. (=1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.WebService">
      <summary>Specifies a Web service system type. (=2)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Wcf">
      <summary>Specifies a Windows Communication Foundation (WCF) system type. (=3)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Custom">
      <summary>Specifies a custom system type. (=4) </summary>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.ThrottleType">
      <summary>Specifies the type of throttling to perform on a <see cref="T:Microsoft.BusinessData.SystemSpecific.ThrottleScope" /> object.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.None">
      <summary>No throttling is done.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Items">
      <summary>Throttling is based on the number of items that are returned from the external system.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Size">
      <summary>Throttling is based on the amount of data that is returned from the external system.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Connections">
      <summary>Throttling is based on the number of connections that are opened to the external system.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Timeout">
      <summary>Throttling is based on the timeout for opening a connection to the external system.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1">
      <summary>Represents a wrapper for ClientBase class.</summary>
      <typeparam name="TChannel">The channel to be used to connect to the service.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class using the specified binding and target address.</summary>
      <param name="binding">The binding with which to make calls to the service.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class using the specified callback instance as the callback object in a duplex conversation.</summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="callbackInstance" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class using the specified callback instance, the binding, and target address.</summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <param name="binding">The binding with which to make calls to the service.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="callbackInstance" />, <paramref name="binding" />, or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class using the specified callback instance and endpoint configuration name.</summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class with the specified callback instance, endpoint configuration name, and remote address.</summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="callbackInstance" />, <paramref name="endpointConfigurationName" />, or <paramref name="remoteAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class using the specified callback instance, endpoint configuration name, and remote address.</summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="callbackInstance" />, <paramref name="endpointConfigurationName" />, or <paramref name="remoteAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class using the specified endpoint configuration name.</summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="endpointConfigurationName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class using the specified endpoint configuration name and remote address.</summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class with the specified endpoint configuration name and remote address.</summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.ClientBaseExtender">
      <summary>Gets or sets the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.IBdcClientBaseExtender" /> instance that extends the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class.</summary>
      <returns>The instance that extends the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.CreateChannel">
      <summary>Creates a new channel to the service.</summary>
      <returns>A new channel.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1.ReplaceClientCredentials(System.ServiceModel.Description.ClientCredentials)">
      <summary>Replace the client credentials with the specified client credentials.</summary>
      <param name="clientCredentials">The new client credentials to use.</param>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.Wcf.IBdcClientBase">
      <summary>Represents the interface that is implemented by the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.Wcf.IBdcClientBase.ClientBaseExtender">
      <summary>Gets or sets the instance that extends the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class.</summary>
      <returns>The instance that extends the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.IBdcClientBase.ReplaceClientCredentials(System.ServiceModel.Description.ClientCredentials)">
      <summary>Replace the client credentials with the specified client credentials.</summary>
      <param name="clientCredentials">The new client credentials to use.</param>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.Wcf.IBdcClientBaseExtender">
      <summary>Represents an interface used to extend the <see cref="T:Microsoft.BusinessData.SystemSpecific.Wcf.BdcClientBase`1" /> class to provide platform-specific functionality.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.IBdcClientBaseExtender.CreateChannel``1(System.ServiceModel.ChannelFactory{``0})">
      <summary>Creates a new channel to the service using the specified channel factory.</summary>
      <returns>A new channel.</returns>
      <param name="factory">The factory used to create channels of the specified generic type.</param>
      <typeparam name="T">The type of channel produced by the channel factory.</typeparam>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.Wcf.IWcfBindingProvider">
      <summary>Represents an interface that is required to modify the binding used by the Business Data Connectivity (BDC) service to connect to the Web service.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.IWcfBindingProvider.CreateBinding(Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.ServiceModel.Channels.Binding)">
      <summary>Creates and returns a binding that will be used by BDC to connect to the Web service.</summary>
      <returns>A binding combined with a supplied implementation ClientBase and Endpoint address URI.</returns>
      <param name="lobSystemInstance">The external system instance object for which BDC is connecting to the Web service.</param>
      <param name="existingBinding">The existing binding that BDC would have used to connect to the Web service.</param>
    </member>
  </members>
</doc>